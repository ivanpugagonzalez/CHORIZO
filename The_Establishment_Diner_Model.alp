<?xml version="1.0" encoding="UTF-8"?>
<!--
*************************************************
	         AnyLogic Project File 
*************************************************	         
-->
<AnyLogicWorkspace WorkspaceVersion="1.9" AnyLogicVersion="8.7.10.202202091745" AlpVersion="8.7.3">
<Model>
	<Id>1169204694666</Id>
	<Name><![CDATA[The_Establishment_Diner_Model]]></Name>
	<Description><![CDATA[Demonstration of standard agent network and layout types (in continuous space) supported by AnyLogic. Network types include random, based on distance, small world, scale free, and ring lattice. Layout types include random, arranged, spring mass, ring. You can dynamically change networks and layouts as well as the number of agents.]]></Description>
	<EngineVersion>6</EngineVersion>
	<JavaPackageName><![CDATA[establishment_diner_model]]></JavaPackageName>
	<ModelTimeUnit><![CDATA[Day]]></ModelTimeUnit>
	<OptionLists>
		<OptionList>
			<Id>1699969043268</Id>
			<Name><![CDATA[Choice_chosen]]></Name>
			<Option>
				<Id>1699969043269</Id>
				<Name><![CDATA[none]]></Name>
			</Option>
			<Option>
				<Id>1699969043270</Id>
				<Name><![CDATA[right]]></Name>
			</Option>
			<Option>
				<Id>1699969043271</Id>
				<Name><![CDATA[left]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1699970088213</Id>
			<Name><![CDATA[mot_type]]></Name>
			<Option>
				<Id>1699970088214</Id>
				<Name><![CDATA[experiential]]></Name>
			</Option>
			<Option>
				<Id>1699970088215</Id>
				<Name><![CDATA[values]]></Name>
			</Option>
			<Option>
				<Id>1699970088216</Id>
				<Name><![CDATA[social]]></Name>
			</Option>
		</OptionList>
		<OptionList>
			<Id>1705395487870</Id>
			<Name><![CDATA[Gender]]></Name>
			<Option>
				<Id>1705395487871</Id>
				<Name><![CDATA[Male]]></Name>
			</Option>
			<Option>
				<Id>1705395487872</Id>
				<Name><![CDATA[Female]]></Name>
			</Option>
		</OptionList>
	</OptionLists>
	<ActiveObjectClasses>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1169204694667</Id>
			<Name><![CDATA[Main]]></Name>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1414070861864</Id>
				<Name><![CDATA[1414070861864]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameters:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>false</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>RANDOM</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1414137600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1414070861867</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1696324808939</CurrentLevel>
			<ConnectionsId>1391002816801</ConnectionsId>
			<Outputs>
				<Output>
					<Id>1705491509442</Id>
					<Name><![CDATA[Number_of_Business_agents]]></Name>
					<X>-220</X><Y>270</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Type><![CDATA[double]]></Type>
					<UnitType><![CDATA[NONE]]></UnitType>
					<Value Class="CodeValue">
						<Code><![CDATA[Num_business_agents]]></Code>
					</Value>
					<ComputationMoment>MANUALLY</ComputationMoment>
					<ComputationTimeCode Class="CodeUnitValue">
						<Code><![CDATA[]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</ComputationTimeCode>
					<ComputationDate>1705564800000</ComputationDate>
				</Output>
				<Output>
					<Id>1705491558737</Id>
					<Name><![CDATA[Number_of_Non_Business_agents]]></Name>
					<X>-220</X><Y>250</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Type><![CDATA[double]]></Type>
					<UnitType><![CDATA[NONE]]></UnitType>
					<Value Class="CodeValue">
						<Code><![CDATA[Num_non_business_agents]]></Code>
					</Value>
					<ComputationMoment>MANUALLY</ComputationMoment>
					<ComputationTimeCode Class="CodeUnitValue">
						<Code><![CDATA[]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</ComputationTimeCode>
					<ComputationDate>1705564800000</ComputationDate>
				</Output>
			</Outputs>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1169212502273</Id>
					<Name><![CDATA[connectionRange]]></Name>
					<X>220</X><Y>-170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[50]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1169212657436</Id>
					<Name><![CDATA[connectionsPerAgent]]></Name>
					<X>220</X><Y>-190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[2]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1169212693478</Id>
					<Name><![CDATA[scaleFreeM]]></Name>
					<X>220</X><Y>-130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[10]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1169212722169</Id>
					<Name><![CDATA[neighborLinkProbability]]></Name>
					<X>220</X><Y>-150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0.95]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705485344717</Id>
					<Name><![CDATA[Num_A_1st_Plate]]></Name>
					<X>-340</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705485358930</Id>
					<Name><![CDATA[Num_B_1st_Plate]]></Name>
					<X>-340</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705486434147</Id>
					<Name><![CDATA[Num_basic]]></Name>
					<X>420</X><Y>1120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705486445001</Id>
					<Name><![CDATA[Num_satisfaction]]></Name>
					<X>510</X><Y>1120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705486450537</Id>
					<Name><![CDATA[Num_dissonance]]></Name>
					<X>630</X><Y>1120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705486454177</Id>
					<Name><![CDATA[Num_experiential]]></Name>
					<X>750</X><Y>1120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705486458104</Id>
					<Name><![CDATA[Num_Exp_Rnd]]></Name>
					<X>870</X><Y>1120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705486813880</Id>
					<Name><![CDATA[Num_oneplates]]></Name>
					<X>820</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705486813883</Id>
					<Name><![CDATA[Num_twoplates]]></Name>
					<X>820</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705486813885</Id>
					<Name><![CDATA[Num_threeplates]]></Name>
					<X>820</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705491591241</Id>
					<Name><![CDATA[Num_business_agents]]></Name>
					<X>820</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705491621306</Id>
					<Name><![CDATA[Num_non_business_agents]]></Name>
					<X>820</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705493512398</Id>
					<Name><![CDATA[Day]]></Name>
					<X>-530</X><Y>-30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[1]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708353444574</Id>
					<Name><![CDATA[Num_IAST]]></Name>
					<X>420</X><Y>1150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708353448592</Id>
					<Name><![CDATA[Num_DAST]]></Name>
					<X>510</X><Y>1150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708353452191</Id>
					<Name><![CDATA[Num_TC]]></Name>
					<X>600</X><Y>1150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708353496761</Id>
					<Name><![CDATA[Num_C_1st_Plate]]></Name>
					<X>-340</X><Y>420</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708353500223</Id>
					<Name><![CDATA[Num_D_1st_Plate]]></Name>
					<X>-340</X><Y>440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708353549415</Id>
					<Name><![CDATA[Num_finish_1_1st_Plt]]></Name>
					<X>-340</X><Y>570</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708353549424</Id>
					<Name><![CDATA[Num_leave_1_1st_Plt]]></Name>
					<X>-340</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708353607000</Id>
					<Name><![CDATA[Num_finish_2_1st_Plt]]></Name>
					<X>-340</X><Y>610</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708353607002</Id>
					<Name><![CDATA[Num_leave_2_1st_Plt]]></Name>
					<X>-340</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711458542884</Id>
					<Name><![CDATA[Num_Exp_OOCF]]></Name>
					<X>680</X><Y>1150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711458573818</Id>
					<Name><![CDATA[Num_PSC]]></Name>
					<X>810</X><Y>1150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711524474913</Id>
					<Name><![CDATA[Num_fourplates]]></Name>
					<X>820</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711524479285</Id>
					<Name><![CDATA[Num_fiveplates]]></Name>
					<X>820</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711524483704</Id>
					<Name><![CDATA[Num_sixplates]]></Name>
					<X>820</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711524490225</Id>
					<Name><![CDATA[Num_sevenplates]]></Name>
					<X>820</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711527562910</Id>
					<Name><![CDATA[Num_A_Extra_Plates]]></Name>
					<X>-340</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711527562920</Id>
					<Name><![CDATA[Num_B_Extra_Plates]]></Name>
					<X>-340</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711527562922</Id>
					<Name><![CDATA[Num_C_Extra_Plates]]></Name>
					<X>-340</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711527562924</Id>
					<Name><![CDATA[Num_D_Extra_Plates]]></Name>
					<X>-340</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711534924806</Id>
					<Name><![CDATA[Num_finish_1_Ext_Plt]]></Name>
					<X>-340</X><Y>660</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711534924812</Id>
					<Name><![CDATA[Num_leave_1_Ext_Plt]]></Name>
					<X>-340</X><Y>680</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711534924814</Id>
					<Name><![CDATA[Num_finish_2_Ext_Plt]]></Name>
					<X>-340</X><Y>700</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711534924816</Id>
					<Name><![CDATA[Num_leave_2_Ext_Plt]]></Name>
					<X>-340</X><Y>720</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711549329175</Id>
					<Name><![CDATA[Num_lack_time_1st_Plt]]></Name>
					<X>-530</X><Y>570</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711549354349</Id>
					<Name><![CDATA[Num_lack_time_Ext_Plt]]></Name>
					<X>-530</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="Parameter">
					<Id>1700124369762</Id>
					<Name><![CDATA[n_Agents]]></Name>
					<X>-210</X><Y>-120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[100]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1700124369760</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1700126011229</Id>
					<Name><![CDATA[layout_type]]></Name>
					<X>-190</X><Y>-260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[1]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1700126011227</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1700126055909</Id>
					<Name><![CDATA[network_type]]></Name>
					<X>-190</X><Y>-240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1700126055907</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1700126092126</Id>
					<Name><![CDATA[connections_PerAgent]]></Name>
					<X>-70</X><Y>-260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[2]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1700126092124</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1700126121589</Id>
					<Name><![CDATA[connection_Range]]></Name>
					<X>-70</X><Y>-240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[50]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1700126121587</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1700126139492</Id>
					<Name><![CDATA[neighbor_LinkProbability]]></Name>
					<X>-70</X><Y>-220</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.95]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1700126139490</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1700126169812</Id>
					<Name><![CDATA[scaleFree_M]]></Name>
					<X>-70</X><Y>-200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[int]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[10]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1700126169810</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1705405051551</Id>
					<Name><![CDATA[Business_proportion]]></Name>
					<X>-700</X><Y>-250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.5]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1705405051549</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1705405069037</Id>
					<Name><![CDATA[Female_proportion]]></Name>
					<X>-700</X><Y>-230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.5]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1705405069035</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1708095962224</Id>
					<Name><![CDATA[Small_plate]]></Name>
					<X>-700</X><Y>-210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[boolean]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1708095962219</Id>
							<EditorContolType>CHECK_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1708336779899</Id>
					<Name><![CDATA[Food_Diversity]]></Name>
					<Description><![CDATA[Hoter food diversity. 1 --> high; 0 --> low]]></Description>
					<X>-700</X><Y>-190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[1]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1708336779897</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
				<Variable Class="Parameter">
					<Id>1708337460498</Id>
					<Name><![CDATA[left_food_percentage]]></Name>
					<Description><![CDATA[The percentage of food chosen but not liked ]]></Description>
					<X>-530</X><Y>-250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" ModificatorType="STATIC">
						<Type><![CDATA[double]]></Type>
						<UnitType><![CDATA[NONE]]></UnitType>
						<SdArray>false</SdArray>
						<DefaultValue Class="CodeValue">
							<Code><![CDATA[0.1]]></Code>
						</DefaultValue>
						<ParameterEditor>
							<Id>1708337460496</Id>
							<EditorContolType>TEXT_BOX</EditorContolType>
							<MinSliderValue><![CDATA[0]]></MinSliderValue>
							<MaxSliderValue><![CDATA[100]]></MaxSliderValue>
							<DelimeterType>NO_DELIMETER</DelimeterType>
						</ParameterEditor>
					</Properties>                 
				</Variable>
			</Variables>
			<StatechartElements>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1699972992653</Id>
					<Name><![CDATA[Initialize]]></Name>
					<X>-370</X><Y>-120</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[traceln("Initializing model");]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1700128952315</Id>
					<Name><![CDATA[Populate]]></Name>
					<X>-370</X><Y>-40</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[traceln("Populating model");
create_agents();
set_Network();
//first stats update
update_Number_of_Business_agents();
update_Number_of_Non_Business_agents();
Choice_A_1st_Plate.add(Day, Num_A_1st_Plate);
Choice_B_1st_Plate.add(Day, Num_B_1st_Plate);
Choice_C_1st_Plate.add(Day, Num_C_1st_Plate);
Choice_D_1st_Plate.add(Day, Num_D_1st_Plate);

Choice_A_Extra_Plates.add(Day, Num_A_Extra_Plates);
Choice_B_Extra_Plates.add(Day, Num_B_Extra_Plates);
Choice_C_Extra_Plates.add(Day, Num_C_Extra_Plates);
Choice_D_Extra_Plates.add(Day, Num_D_Extra_Plates);
]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1702390721437</Id>
					<Name><![CDATA[Reset_Variables]]></Name>
					<X>-370</X><Y>30</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[//traceln();
//traceln("Reseting Variables");
Day ++;
//traceln("Day: " + Day + " Time: "+ time(HOUR));
//remove all alters representations
remove_alters_and_choice_representations();

/// update number of business agents
update_Number_of_Business_agents();
update_Number_of_Non_Business_agents();

/// reset leftovers histograms
LeftOvers_disliked_business.reset();
LeftOvers_disliked_nonbusiness.reset();
LeftOvers_liked_business.reset();
LeftOvers_liked_nonbusiness.reset();
LeftOvers_total_business.reset();
LeftOvers_total_nonbusiness.reset();


/// reset breakfast time histograms
breakfast_time_non_business.reset();
breakfast_time_business.reset();

///reset choice counters
Num_A_1st_Plate = 0;
Num_B_1st_Plate = 0;
Num_C_1st_Plate = 0;
Num_D_1st_Plate = 0;
Num_A_Extra_Plates = 0;
Num_B_Extra_Plates = 0;
Num_C_Extra_Plates = 0;
Num_D_Extra_Plates = 0;

Num_lack_time_1st_Plt = 0;
Num_lack_time_Ext_Plt = 0;
Num_finish_1_1st_Plt = 0;
Num_leave_1_1st_Plt = 0;
Num_finish_2_1st_Plt = 0;
Num_leave_2_1st_Plt = 0;
Num_finish_1_Ext_Plt = 0;
Num_leave_1_Ext_Plt = 0;
Num_finish_2_Ext_Plt = 0;
Num_leave_2_Ext_Plt = 0;

//reset number of servings counters
Num_oneplates = 0;
Num_twoplates = 0;
Num_threeplates = 0;
Num_fourplates = 0;
Num_fiveplates = 0;
Num_sixplates = 0;
Num_sevenplates = 0;

//reset decision based counters
Num_basic = 0;
Num_satisfaction = 0;
Num_dissonance = 0;
Num_experiential = 0;
Num_Exp_Rnd = 0;
Num_Exp_OOCF = 0;
Num_PSC = 0;]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1705494028412</Id>
					<Name><![CDATA[Update_Variables]]></Name>
					<X>-370</X><Y>120</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[//traceln();
//traceln("Updating Variables" + " Time: "+ time(HOUR));
//Update choices overtime
Choice_A_1st_Plate.add(Day, Num_A_1st_Plate);
Choice_B_1st_Plate.add(Day, Num_B_1st_Plate);
Choice_C_1st_Plate.add(Day, Num_C_1st_Plate);
Choice_D_1st_Plate.add(Day, Num_D_1st_Plate);

Choice_A_Extra_Plates.add(Day, Num_A_Extra_Plates);
Choice_B_Extra_Plates.add(Day, Num_B_Extra_Plates);
Choice_C_Extra_Plates.add(Day, Num_C_Extra_Plates);
Choice_D_Extra_Plates.add(Day, Num_D_Extra_Plates);
//traceln();]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="EntryPoint" ParentState="ROOT_NODE">
					<Id>1699972992656</Id>
					<Name><![CDATA[statechart_Main]]></Name>
					<X>-320</X><Y>-160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>40</Y></Point>
					</Points>
					<Properties Target="1699972992653">
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1700128948769</Id>
					<Name><![CDATA[transition]]></Name>
					<X>-320</X><Y>-90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1699972992653" Target="1700128952315" Trigger="timeout">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1702390735951</Id>
					<Name><![CDATA[transition1]]></Name>
					<X>-320</X><Y>-20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>10</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1700128952315" Target="1702390721437" Trigger="timeout">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[0.95]]></Code>
							<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1705491797001</Id>
					<Name><![CDATA[transition2]]></Name>
					<X>-320</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>40</Y></Point>
						<Point><X>71</X><Y>40</Y></Point>
						<Point><X>71</X><Y>-103</Y></Point>
						<Point><X>50</X><Y>-100</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1705494028412" Target="1702390721437" Trigger="timeout">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[0.8]]></Code>
							<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1705494044476</Id>
					<Name><![CDATA[transition3]]></Name>
					<X>-320</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>60</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1702390721437" Target="1705494028412" Trigger="timeout">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[0.2]]></Code>
							<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
			</StatechartElements>
			<DynamicEvents>
				<DynamicEventClass>
					<Id>1401265592325</Id>
					<Name><![CDATA[ChangeNumberOfAgents]]></Name>
					<X>220</X><Y>-60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[n]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Action><![CDATA[/*while( agents.size() > n )
	remove_agents( agents.get(0) );
while( agents.size() < n ) {
	Agent a = add_agents();
	a.setEnvironment( this );
}

boolean firstApplyLayout =
	(getNetworkType() == NETWORK_ALL_IN_RANGE);

if (firstApplyLayout) {
	applyLayout();
	applyNetwork();
} else {
	applyNetwork();
	applyLayout();
}*/]]></Action>
				</DynamicEventClass>
			</DynamicEvents>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1169212585763</Id>
					<Name><![CDATA[refreshNetwork]]></Name>
					<X>220</X><Y>-110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/*switch( radioNetworkType.getValue() ) {
case 0:
	setNetworkUserDefined();
	break;
case 1:
	setNetworkRandom( connectionsPerAgent );
	break;
case 2:
	setNetworkAllInRange( connectionRange );
	break;
case 3:
	setNetworkRingLattice( (int)connectionsPerAgent );
	break;
case 4:
	setNetworkSmallWorld( (int)connectionsPerAgent, neighborLinkProbability );
	break;
case 5:
	setNetworkScaleFree( scaleFreeM );
	break;
}
applyNetwork();
for (Agent a : agents )
{
	traceln(a.getConnections());
}*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1169242460486</Id>
					<Name><![CDATA[setNumberOfAgents]]></Name>
					<X>220</X><Y>-90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[n]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[//create_ChangeNumberOfAgents( 0, n );]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[void]]></ReturnType>
					<Id>1699973031931</Id>
					<Name><![CDATA[set_Network]]></Name>
					<X>-120</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// define network type
switch( network_type ) {
case 0:
	setNetworkUserDefined();
	break;
case 1:
	setNetworkRandom( connections_PerAgent );
	break;
case 2:
	setNetworkAllInRange( connection_Range );
	break;
case 3:
	setNetworkRingLattice( (int)connections_PerAgent );
	break;
case 4:
	setNetworkSmallWorld( (int)connections_PerAgent, neighbor_LinkProbability );
	break;
case 5:
	setNetworkScaleFree( scaleFree_M );
	break;
}
/// set network type according to above cases
applyNetwork();

/// set network layout
setLayoutType( LayoutType.values() [layout_type]);
applyLayout();

// check the connections of each agent to others
/*for (Person p : People )
{
	traceln("ID: " + p.Id + " Connections: " + p.getConnections());
}
traceln();*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1700124674911</Id>
					<Name><![CDATA[create_agents]]></Name>
					<X>-120</X><Y>-120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for (int i = 0; i < n_Agents; i++)
{
	Person a = add_People();
	a.Id = i + 1;
	//a.setEnvironment( this );
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1705935711175</Id>
					<Name><![CDATA[remove_alters_and_choice_representations]]></Name>
					<X>-120</X><Y>-80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[for (Iterator<alter> iterator = alters.iterator(); iterator.hasNext(); ) 
{
    alter a = iterator.next();
    a.disconnectFromAll(); 
	iterator.remove();
}

for (Iterator<choiceRepresentation> iterator = choiceRepresentations.iterator(); iterator.hasNext(); ) 
{
    choiceRepresentation cr = iterator.next();
    cr.disconnectFromAll(); 
	iterator.remove();
}]]></Body>
				</Function>
			</Functions>
			<AnalysisData>
    			<DataSet>
					<Id>1702391180339</Id>
					<Name><![CDATA[Choice_A_1st_Plate]]></Name>
					<X>-170</X><Y>380</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>300</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1702391209937</Id>
					<Name><![CDATA[Choice_B_1st_Plate]]></Name>
					<X>-170</X><Y>400</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>300</SamplesToKeep>
				</DataSet>
    			<HistogramData>
					<Id>1702391299991</Id>
					<Name><![CDATA[LeftOvers_disliked_business]]></Name>
					<X>-220</X><Y>100</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<Value><![CDATA[]]></Value>
					<NumberOfIntervals>50</NumberOfIntervals>
					<MinMaxAutodetect>true</MinMaxAutodetect>
					<RangeMinExpression><![CDATA[0]]></RangeMinExpression>
					<RangeMaxExpression><![CDATA[1]]></RangeMaxExpression>
					<InitialIntervalSize><![CDATA[0.1]]></InitialIntervalSize>
					<CalculateCDF>true</CalculateCDF>
					<CalculatePercentiles>false</CalculatePercentiles>
					<LowPercent>10</LowPercent>
					<HighPercent>10</HighPercent>
					<Title><![CDATA[]]></Title>
				</HistogramData>
    			<HistogramData>
					<Id>1705487316872</Id>
					<Name><![CDATA[breakfast_time_non_business]]></Name>
					<X>-180</X><Y>770</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1705564800000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<Value><![CDATA[]]></Value>
					<NumberOfIntervals>30</NumberOfIntervals>
					<MinMaxAutodetect>true</MinMaxAutodetect>
					<RangeMinExpression><![CDATA[0]]></RangeMinExpression>
					<RangeMaxExpression><![CDATA[1]]></RangeMaxExpression>
					<InitialIntervalSize><![CDATA[0.1]]></InitialIntervalSize>
					<CalculateCDF>true</CalculateCDF>
					<CalculatePercentiles>false</CalculatePercentiles>
					<LowPercent>10</LowPercent>
					<HighPercent>10</HighPercent>
					<Title><![CDATA[]]></Title>
				</HistogramData>
    			<HistogramData>
					<Id>1705487342160</Id>
					<Name><![CDATA[breakfast_time_business]]></Name>
					<X>-180</X><Y>790</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1705564800000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<Value><![CDATA[]]></Value>
					<NumberOfIntervals>30</NumberOfIntervals>
					<MinMaxAutodetect>true</MinMaxAutodetect>
					<RangeMinExpression><![CDATA[0]]></RangeMinExpression>
					<RangeMaxExpression><![CDATA[1]]></RangeMaxExpression>
					<InitialIntervalSize><![CDATA[0.1]]></InitialIntervalSize>
					<CalculateCDF>true</CalculateCDF>
					<CalculatePercentiles>false</CalculatePercentiles>
					<LowPercent>10</LowPercent>
					<HighPercent>10</HighPercent>
					<Title><![CDATA[]]></Title>
				</HistogramData>
    			<HistogramData>
					<Id>1705491161661</Id>
					<Name><![CDATA[LeftOvers_disliked_nonbusiness]]></Name>
					<X>-220</X><Y>120</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<Value><![CDATA[]]></Value>
					<NumberOfIntervals>50</NumberOfIntervals>
					<MinMaxAutodetect>true</MinMaxAutodetect>
					<RangeMinExpression><![CDATA[0]]></RangeMinExpression>
					<RangeMaxExpression><![CDATA[1]]></RangeMaxExpression>
					<InitialIntervalSize><![CDATA[0.1]]></InitialIntervalSize>
					<CalculateCDF>true</CalculateCDF>
					<CalculatePercentiles>false</CalculatePercentiles>
					<LowPercent>10</LowPercent>
					<HighPercent>10</HighPercent>
					<Title><![CDATA[]]></Title>
				</HistogramData>
    			<DataSet>
					<Id>1708353522926</Id>
					<Name><![CDATA[Choice_C_1st_Plate]]></Name>
					<X>-170</X><Y>420</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>300</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708353527441</Id>
					<Name><![CDATA[Choice_D_1st_Plate]]></Name>
					<X>-170</X><Y>440</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>300</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708353549429</Id>
					<Name><![CDATA[Choice_finish_1_1st_Plt]]></Name>
					<X>-190</X><Y>570</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>300</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708353582858</Id>
					<Name><![CDATA[Choice_leave_1_1st_Plt]]></Name>
					<X>-190</X><Y>590</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>300</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708353607005</Id>
					<Name><![CDATA[Choice_finish_2_1st_Plt]]></Name>
					<X>-190</X><Y>610</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>300</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1708353607037</Id>
					<Name><![CDATA[Choice_leave_2_1st_Plt]]></Name>
					<X>-190</X><Y>630</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>300</SamplesToKeep>
				</DataSet>
    			<HistogramData>
					<Id>1708526223280</Id>
					<Name><![CDATA[LeftOvers_liked_business]]></Name>
					<X>-220</X><Y>150</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<Value><![CDATA[]]></Value>
					<NumberOfIntervals>50</NumberOfIntervals>
					<MinMaxAutodetect>true</MinMaxAutodetect>
					<RangeMinExpression><![CDATA[0]]></RangeMinExpression>
					<RangeMaxExpression><![CDATA[1]]></RangeMaxExpression>
					<InitialIntervalSize><![CDATA[0.1]]></InitialIntervalSize>
					<CalculateCDF>true</CalculateCDF>
					<CalculatePercentiles>false</CalculatePercentiles>
					<LowPercent>10</LowPercent>
					<HighPercent>10</HighPercent>
					<Title><![CDATA[]]></Title>
				</HistogramData>
    			<HistogramData>
					<Id>1708526223309</Id>
					<Name><![CDATA[LeftOvers_liked_nonbusiness]]></Name>
					<X>-220</X><Y>170</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<Value><![CDATA[]]></Value>
					<NumberOfIntervals>50</NumberOfIntervals>
					<MinMaxAutodetect>true</MinMaxAutodetect>
					<RangeMinExpression><![CDATA[0]]></RangeMinExpression>
					<RangeMaxExpression><![CDATA[1]]></RangeMaxExpression>
					<InitialIntervalSize><![CDATA[0.1]]></InitialIntervalSize>
					<CalculateCDF>true</CalculateCDF>
					<CalculatePercentiles>false</CalculatePercentiles>
					<LowPercent>10</LowPercent>
					<HighPercent>10</HighPercent>
					<Title><![CDATA[]]></Title>
				</HistogramData>
    			<HistogramData>
					<Id>1711526231572</Id>
					<Name><![CDATA[LeftOvers_total_business]]></Name>
					<X>-220</X><Y>200</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<Value><![CDATA[]]></Value>
					<NumberOfIntervals>50</NumberOfIntervals>
					<MinMaxAutodetect>true</MinMaxAutodetect>
					<RangeMinExpression><![CDATA[0]]></RangeMinExpression>
					<RangeMaxExpression><![CDATA[1]]></RangeMaxExpression>
					<InitialIntervalSize><![CDATA[0.1]]></InitialIntervalSize>
					<CalculateCDF>true</CalculateCDF>
					<CalculatePercentiles>false</CalculatePercentiles>
					<LowPercent>10</LowPercent>
					<HighPercent>10</HighPercent>
					<Title><![CDATA[]]></Title>
				</HistogramData>
    			<HistogramData>
					<Id>1711526231598</Id>
					<Name><![CDATA[LeftOvers_total_nonbusiness]]></Name>
					<X>-220</X><Y>220</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<Value><![CDATA[]]></Value>
					<NumberOfIntervals>50</NumberOfIntervals>
					<MinMaxAutodetect>true</MinMaxAutodetect>
					<RangeMinExpression><![CDATA[0]]></RangeMinExpression>
					<RangeMaxExpression><![CDATA[1]]></RangeMaxExpression>
					<InitialIntervalSize><![CDATA[0.1]]></InitialIntervalSize>
					<CalculateCDF>true</CalculateCDF>
					<CalculatePercentiles>false</CalculatePercentiles>
					<LowPercent>10</LowPercent>
					<HighPercent>10</HighPercent>
					<Title><![CDATA[]]></Title>
				</HistogramData>
    			<DataSet>
					<Id>1711527562927</Id>
					<Name><![CDATA[Choice_A_Extra_Plates]]></Name>
					<X>-170</X><Y>470</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>300</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1711527562941</Id>
					<Name><![CDATA[Choice_B_Extra_Plates]]></Name>
					<X>-170</X><Y>490</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>300</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1711527562949</Id>
					<Name><![CDATA[Choice_C_Extra_Plates]]></Name>
					<X>-170</X><Y>510</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>300</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1711527572250</Id>
					<Name><![CDATA[Choice_D_Extra_Plates]]></Name>
					<X>-170</X><Y>530</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>300</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1711534924819</Id>
					<Name><![CDATA[Choice_leave_1_Ext_Plt]]></Name>
					<X>-190</X><Y>680</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>300</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1711534924831</Id>
					<Name><![CDATA[Choice_finish_2_Ext_Plt]]></Name>
					<X>-190</X><Y>700</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>300</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1711534924844</Id>
					<Name><![CDATA[Choice_leave_2_Ext_Plt]]></Name>
					<X>-190</X><Y>720</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>300</SamplesToKeep>
				</DataSet>
    			<DataSet>
					<Id>1711534938146</Id>
					<Name><![CDATA[Choice_finish_1_Ext_Plt]]></Name>
					<X>-190</X><Y>660</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<AutoUpdate>false</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<FreezeXAxis>false</FreezeXAxis>
					<SamplesToKeep>300</SamplesToKeep>
				</DataSet>
			</AnalysisData>
			<AgentLinks>
				<AgentLink>
					<Id>1391002816801</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<StatechartReference>
						<PackageName><![CDATA[establishment_diner_model]]></PackageName>
						<ClassName><![CDATA[Main]]></ClassName>
						<ItemName><![CDATA[statechart_Main]]></ItemName>
					</StatechartReference>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<EmbeddedObjects>
				<EmbeddedObject>
					<Id>1169205000956</Id>
					<Name><![CDATA[People]]></Name>
					<X>-150</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[establishment_diner_model]]></PackageName>
						<ClassName><![CDATA[Person]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[establishment_diner_model]]></PackageName>
							<ClassName><![CDATA[Person]]></ClassName>
							<ItemName><![CDATA[1414070861868]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[50]]></Code>
					</Replication>
					<EnvironmentCode><![CDATA[this]]></EnvironmentCode>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialSpeedCode Class="CodeUnitValue">
						<Code><![CDATA[10]]></Code>
						<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
					</InitialSpeedCode>
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1700146222603</Id>
					<Name><![CDATA[motives]]></Name>
					<X>-150</X><Y>10</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[establishment_diner_model]]></PackageName>
						<ClassName><![CDATA[motive]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[establishment_diner_model]]></PackageName>
							<ClassName><![CDATA[motive]]></ClassName>
							<ItemName><![CDATA[1699968747423]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1700149638774</Id>
					<Name><![CDATA[choices]]></Name>
					<X>-150</X><Y>-10</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[establishment_diner_model]]></PackageName>
						<ClassName><![CDATA[choice]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[establishment_diner_model]]></PackageName>
							<ClassName><![CDATA[choice]]></ClassName>
							<ItemName><![CDATA[1699968924614]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1700231450485</Id>
					<Name><![CDATA[alters]]></Name>
					<X>-150</X><Y>-30</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[establishment_diner_model]]></PackageName>
						<ClassName><![CDATA[alter]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[establishment_diner_model]]></PackageName>
							<ClassName><![CDATA[alter]]></ClassName>
							<ItemName><![CDATA[1699969286785]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
				<EmbeddedObject>
					<Id>1700237528848</Id>
					<Name><![CDATA[choiceRepresentations]]></Name>
					<X>-150</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[establishment_diner_model]]></PackageName>
						<ClassName><![CDATA[choiceRepresentation]]></ClassName>
					</ActiveObjectClass>
					<GenericParameterSubstitute>
						<GenericParameterSubstituteReference>
							<PackageName><![CDATA[establishment_diner_model]]></PackageName>
							<ClassName><![CDATA[choiceRepresentation]]></ClassName>
							<ItemName><![CDATA[1699970353596]]></ItemName>
						</GenericParameterSubstituteReference>
					</GenericParameterSubstitute>
					<Parameters>
					</Parameters>
					<ReplicationFlag>true</ReplicationFlag>
					<Replication Class="CodeValue">
						<Code><![CDATA[100]]></Code>
					</Replication>
					<CollectionType>ARRAY_LIST_BASED</CollectionType>
					<InEnvironment>true</InEnvironment>	
					<InitialLocationType>AT_ANIMATION_POSITION</InitialLocationType>
					<XCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</XCode>
					<YCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</YCode>
					<ZCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ZCode>
					<ColumnCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</ColumnCode>
					<RowCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</RowCode>
					<LatitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LatitudeCode>
					<LongitudeCode Class="CodeValue">
						<Code><![CDATA[0]]></Code>
					</LongitudeCode>
					<LocationNameCode Class="CodeValue">
						<Code><![CDATA[""]]></Code>
					</LocationNameCode>
					<InitializationType>EMPTY</InitializationType>
					<InitializationDatabaseTableQuery>
						<TableReference>
						</TableReference>
					</InitializationDatabaseTableQuery>
					<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
					<QuantityColumn>
					</QuantityColumn>
				</EmbeddedObject>
			</EmbeddedObjects>

			<Presentation>
				<Level>
					<Id>1696324808939</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>ALWAYS_SHOW</LevelVisibility>

			<Presentation>
				<Rectangle>
					<Id>1169206736492</Id>
					<Name><![CDATA[rect]]></Name>
					<X>10</X><Y>10</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>0</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<Width>780</Width>
					<Height>580</Height>
					<Rotation>0.0</Rotation>
					<FillColor>-657956</FillColor>
					<FillMaterial>null</FillMaterial>
				</Rectangle>
				<Text>
					<Id>1700125978852</Id>
					<Name><![CDATA[text10]]></Name>
					<X>-200</X><Y>-290</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Social Network Parameters]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
    			<Plot>
					<Id>1702390934344</Id>
					<Name><![CDATA[plot]]></Name>
					<X>20</X><Y>880</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0.51]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>390</Width>
					<Height>220</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>40</YOffset>
						<Width>310</Width>
						<Height>120</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>30</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<VerScaleFromExpression><![CDATA[0]]></VerScaleFromExpression>
					<VerScaleToExpression><![CDATA[1]]></VerScaleToExpression>
					<VerScaleType>AUTO</VerScaleType>
					<DrawLine>true</DrawLine>
					<Interpolation>LINEAR</Interpolation>
					<DatasetExpression>  
						<Title><![CDATA[Normal Serving]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[Choice_A_1st_Plate]]></Expression>
					<Color>-65536</Color>
					<Expression2><![CDATA[0]]></Expression2>
					<Expression2Flag>false</Expression2Flag>
						<PointStyle>CIRCLE</PointStyle>
						<LineWidth>1.0</LineWidth>
						<HorizontalAxisExpression><![CDATA[0]]></HorizontalAxisExpression>
					</DatasetExpression>
					<DatasetExpression>  
						<Title><![CDATA[Big Serving]]></Title>
					<Id>0</Id>
					<Expression><![CDATA[Choice_B_1st_Plate]]></Expression>
					<Color>-16711936</Color>
					<Expression2><![CDATA[0]]></Expression2>
					<Expression2Flag>false</Expression2Flag>
						<PointStyle>CIRCLE</PointStyle>
						<LineWidth>1.0</LineWidth>
						<HorizontalAxisExpression><![CDATA[0]]></HorizontalAxisExpression>
					</DatasetExpression>
					<SamplesToKeep>100</SamplesToKeep>
					<HorScaleFromExpression><![CDATA[0]]></HorScaleFromExpression>
					<HorScaleToExpression><![CDATA[1]]></HorScaleToExpression>
					<HorScaleType>AUTO</HorScaleType>
    			</Plot>
    			<BarChart>
					<Id>1702391108097</Id>
					<Name><![CDATA[Decision]]></Name>
					<X>410</X><Y>890</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0.51]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>410</Width>
					<Height>210</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>330</Width>
						<Height>120</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>40</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<DataItem>
					<Id>0</Id>
					<Expression><![CDATA[Num_basic]]></Expression>
					<Color>-2448096</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Basic Choice]]></Title>
					</DataItem>
					<DataItem>
					<Id>0</Id>
					<Expression><![CDATA[Num_satisfaction]]></Expression>
					<Color>-9728477</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Satisfaction]]></Title>
					</DataItem>
					<DataItem>
					<Id>0</Id>
					<Expression><![CDATA[Num_dissonance]]></Expression>
					<Color>-16728065</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Dissonance]]></Title>
					</DataItem>
					<DataItem>
					<Id>0</Id>
					<Expression><![CDATA[Num_experiential]]></Expression>
					<Color>-4565549</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Experiential]]></Title>
					</DataItem>
					<DataItem>
					<Id>0</Id>
					<Expression><![CDATA[Num_Exp_Rnd]]></Expression>
					<Color>-2354116</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Habit]]></Title>
					</DataItem>
					<ScaleFromExpression><![CDATA[0]]></ScaleFromExpression>
					<ScaleToExpression><![CDATA[1]]></ScaleToExpression>
					<ScaleType>AUTO</ScaleType>
					<Bars>
						<Direction>UP</Direction>
						<RelativeWidth>0.8</RelativeWidth>
					</Bars>
    			</BarChart>
				<Text>
					<Id>1705405029332</Id>
					<Name><![CDATA[text11]]></Name>
					<X>-710</X><Y>-280</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Hotel's Guests Parameters]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
    			<BarChart>
					<Id>1705486736998</Id>
					<Name><![CDATA[Number_Of_Servings]]></Name>
					<X>520</X><Y>180</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0.51]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>270</Width>
					<Height>210</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>20</XOffset>
						<YOffset>40</YOffset>
						<Width>220</Width>
						<Height>120</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>40</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<DataItem>
					<Id>1705486736991</Id>
					<Expression><![CDATA[Num_oneplates]]></Expression>
					<Color>-2448096</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[One Plate]]></Title>
					</DataItem>
					<DataItem>
					<Id>1705486736992</Id>
					<Expression><![CDATA[Num_twoplates]]></Expression>
					<Color>-9728477</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Two Plates]]></Title>
					</DataItem>
					<DataItem>
					<Id>1705486736993</Id>
					<Expression><![CDATA[Num_threeplates]]></Expression>
					<Color>-16728065</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Three Plates]]></Title>
					</DataItem>
					<DataItem>
					<Id>0</Id>
					<Expression><![CDATA[Num_fourplates]]></Expression>
					<Color>-4565549</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Four Plates]]></Title>
					</DataItem>
					<DataItem>
					<Id>0</Id>
					<Expression><![CDATA[Num_fiveplates]]></Expression>
					<Color>-2354116</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Five Plates]]></Title>
					</DataItem>
					<DataItem>
					<Id>0</Id>
					<Expression><![CDATA[Num_sixplates]]></Expression>
					<Color>-10496</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Six Plates]]></Title>
					</DataItem>
					<DataItem>
					<Id>0</Id>
					<Expression><![CDATA[Num_sevenplates]]></Expression>
					<Color>-6632142</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Seven Plates]]></Title>
					</DataItem>
					<ScaleFromExpression><![CDATA[0]]></ScaleFromExpression>
					<ScaleToExpression><![CDATA[n_Agents + 1]]></ScaleToExpression>
					<ScaleType>FIXED</ScaleType>
					<Bars>
						<Direction>UP</Direction>
						<RelativeWidth>0.8</RelativeWidth>
					</Bars>
    			</BarChart>
    			<Histogram>
					<Id>1705487146866</Id>
					<Name><![CDATA[Breakfast_Time]]></Name>
					<X>10</X><Y>620</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1705564800000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0.51]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>390</Width>
					<Height>210</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>50</XOffset>
						<YOffset>30</YOffset>
						<Width>310</Width>
						<Height>120</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>40</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<ShowPDF>true</ShowPDF>
					<ShowCDF>false</ShowCDF>
					<ShowMean>false</ShowMean>
					<Bars>
						<Direction>UP</Direction>
						<RelativeWidth>0.8</RelativeWidth>
					</Bars>
					<HistogramDataExpression>
					<Id>0</Id>
					<Expression><![CDATA[breakfast_time_business]]></Expression>
						<ColorPDF>-60269</ColorPDF>
						<ColorCDF>-2987746</ColorCDF>
						<ColorLowPercent>-16728065</ColorLowPercent>
						<ColorHighPercent>-8097537</ColorHighPercent>
						<ColorMean>-32944</ColorMean>
						<LineWidth>1</LineWidth>						
						<Title><![CDATA[Business]]></Title>							
					</HistogramDataExpression>
					<HistogramDataExpression>
					<Id>0</Id>
					<Expression><![CDATA[breakfast_time_non_business]]></Expression>
						<ColorPDF>-29696</ColorPDF>
						<ColorCDF>-2448096</ColorCDF>
						<ColorLowPercent>-4565549</ColorLowPercent>
						<ColorHighPercent>-60269</ColorHighPercent>
						<ColorMean>-13447886</ColorMean>
						<LineWidth>1</LineWidth>						
						<Title><![CDATA[Non-business]]></Title>							
					</HistogramDataExpression>
    			</Histogram>
    			<Histogram>
					<Id>1705490623148</Id>
					<Name><![CDATA[chart]]></Name>
					<X>10</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1705564800000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0.51]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>260</Width>
					<Height>180</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>40</XOffset>
						<YOffset>20</YOffset>
						<Width>200</Width>
						<Height>120</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>20</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<ShowPDF>true</ShowPDF>
					<ShowCDF>false</ShowCDF>
					<ShowMean>true</ShowMean>
					<Bars>
						<Direction>UP</Direction>
						<RelativeWidth>0.8</RelativeWidth>
					</Bars>
					<HistogramDataExpression>
					<Id>0</Id>
					<Expression><![CDATA[LeftOvers_disliked_business]]></Expression>
						<ColorPDF>-9728477</ColorPDF>
						<ColorCDF>-7667573</ColorCDF>
						<ColorLowPercent>-12799119</ColorLowPercent>
						<ColorHighPercent>-9404272</ColorHighPercent>
						<ColorMean>-2448096</ColorMean>
						<LineWidth>1</LineWidth>						
						<Title><![CDATA[Business Person]]></Title>							
					</HistogramDataExpression>
					<HistogramDataExpression>
					<Id>0</Id>
					<Expression><![CDATA[LeftOvers_disliked_nonbusiness]]></Expression>
						<ColorPDF>-16728065</ColorPDF>
						<ColorCDF>-23296</ColorCDF>
						<ColorLowPercent>-9807155</ColorLowPercent>
						<ColorHighPercent>-7667573</ColorHighPercent>
						<ColorMean>-9728477</ColorMean>
						<LineWidth>1</LineWidth>						
						<Title><![CDATA[Non-business Person]]></Title>							
					</HistogramDataExpression>
    			</Histogram>
				<Text>
					<Id>1705493047153</Id>
					<Name><![CDATA[text12]]></Name>
					<X>140</X><Y>630</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Breakfast Time]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1705493136947</Id>
					<Name><![CDATA[text13]]></Name>
					<X>70</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Left overs disliked food in grams]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1705493164418</Id>
					<Name><![CDATA[text14]]></Name>
					<X>160</X><Y>900</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Serving Size]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1705493210178</Id>
					<Name><![CDATA[text15]]></Name>
					<X>550</X><Y>890</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Decision based on:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1705493256425</Id>
					<Name><![CDATA[text16]]></Name>
					<X>550</X><Y>210</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[# of agents going for 2nd and 3rd plate]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
    			<Histogram>
					<Id>1711526042829</Id>
					<Name><![CDATA[chart1]]></Name>
					<X>270</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1705564800000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0.51]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>260</Width>
					<Height>180</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>30</XOffset>
						<YOffset>20</YOffset>
						<Width>210</Width>
						<Height>120</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>20</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<ShowPDF>true</ShowPDF>
					<ShowCDF>false</ShowCDF>
					<ShowMean>true</ShowMean>
					<Bars>
						<Direction>UP</Direction>
						<RelativeWidth>0.8</RelativeWidth>
					</Bars>
					<HistogramDataExpression>
					<Id>1711526042825</Id>
					<Expression><![CDATA[LeftOvers_liked_business]]></Expression>
						<ColorPDF>-9728477</ColorPDF>
						<ColorCDF>-7667573</ColorCDF>
						<ColorLowPercent>-12799119</ColorLowPercent>
						<ColorHighPercent>-9404272</ColorHighPercent>
						<ColorMean>-2448096</ColorMean>
						<LineWidth>1</LineWidth>						
						<Title><![CDATA[Business Person]]></Title>							
					</HistogramDataExpression>
					<HistogramDataExpression>
					<Id>1711526042826</Id>
					<Expression><![CDATA[LeftOvers_liked_nonbusiness]]></Expression>
						<ColorPDF>-16728065</ColorPDF>
						<ColorCDF>-23296</ColorCDF>
						<ColorLowPercent>-9807155</ColorLowPercent>
						<ColorHighPercent>-7667573</ColorHighPercent>
						<ColorMean>-9728477</ColorMean>
						<LineWidth>1</LineWidth>						
						<Title><![CDATA[Non-business Person]]></Title>							
					</HistogramDataExpression>
    			</Histogram>
				<Text>
					<Id>1711526073932</Id>
					<Name><![CDATA[text17]]></Name>
					<X>320</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Left overs liked food in grams]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
    			<Histogram>
					<Id>1711527072718</Id>
					<Name><![CDATA[chart2]]></Name>
					<X>530</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1705564800000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0.51]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>260</Width>
					<Height>180</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>30</XOffset>
						<YOffset>20</YOffset>
						<Width>210</Width>
						<Height>120</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>20</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<ShowPDF>true</ShowPDF>
					<ShowCDF>false</ShowCDF>
					<ShowMean>true</ShowMean>
					<Bars>
						<Direction>UP</Direction>
						<RelativeWidth>0.8</RelativeWidth>
					</Bars>
					<HistogramDataExpression>
					<Id>1711527072714</Id>
					<Expression><![CDATA[LeftOvers_total_business]]></Expression>
						<ColorPDF>-9728477</ColorPDF>
						<ColorCDF>-7667573</ColorCDF>
						<ColorLowPercent>-12799119</ColorLowPercent>
						<ColorHighPercent>-9404272</ColorHighPercent>
						<ColorMean>-2448096</ColorMean>
						<LineWidth>1</LineWidth>						
						<Title><![CDATA[Business Person]]></Title>							
					</HistogramDataExpression>
					<HistogramDataExpression>
					<Id>1711527072715</Id>
					<Expression><![CDATA[LeftOvers_total_nonbusiness]]></Expression>
						<ColorPDF>-16728065</ColorPDF>
						<ColorCDF>-23296</ColorCDF>
						<ColorLowPercent>-9807155</ColorLowPercent>
						<ColorHighPercent>-7667573</ColorHighPercent>
						<ColorMean>-9728477</ColorMean>
						<LineWidth>1</LineWidth>						
						<Title><![CDATA[Non-business Person]]></Title>							
					</HistogramDataExpression>
    			</Histogram>
				<Text>
					<Id>1711527081563</Id>
					<Name><![CDATA[text18]]></Name>
					<X>570</X><Y>10</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[TOTAL Left overs food in grams]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
    			<BarChart>
					<Id>1711527916839</Id>
					<Name><![CDATA[Number_Of_Servings1]]></Name>
					<X>10</X><Y>180</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0.51]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>250</Width>
					<Height>210</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>30</XOffset>
						<YOffset>40</YOffset>
						<Width>200</Width>
						<Height>120</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>40</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<DataItem>
					<Id>1711527916830</Id>
					<Expression><![CDATA[Num_A_1st_Plate]]></Expression>
					<Color>-2448096</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[None]]></Title>
					</DataItem>
					<DataItem>
					<Id>1711527916831</Id>
					<Expression><![CDATA[Num_B_1st_Plate]]></Expression>
					<Color>-9728477</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Small]]></Title>
					</DataItem>
					<DataItem>
					<Id>1711527916832</Id>
					<Expression><![CDATA[Num_C_1st_Plate]]></Expression>
					<Color>-16728065</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Normal]]></Title>
					</DataItem>
					<DataItem>
					<Id>1711527916833</Id>
					<Expression><![CDATA[Num_D_1st_Plate]]></Expression>
					<Color>-4565549</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Large]]></Title>
					</DataItem>
					<ScaleFromExpression><![CDATA[0]]></ScaleFromExpression>
					<ScaleToExpression><![CDATA[n_Agents + 1]]></ScaleToExpression>
					<ScaleType>FIXED</ScaleType>
					<Bars>
						<Direction>UP</Direction>
						<RelativeWidth>0.8</RelativeWidth>
					</Bars>
    			</BarChart>
				<Text>
					<Id>1711527933320</Id>
					<Name><![CDATA[text19]]></Name>
					<X>70</X><Y>210</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Portion Size 1st Plate]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
    			<BarChart>
					<Id>1711528059297</Id>
					<Name><![CDATA[Number_Of_Servings2]]></Name>
					<X>240</X><Y>180</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0.51]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>280</Width>
					<Height>210</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>40</XOffset>
						<YOffset>40</YOffset>
						<Width>210</Width>
						<Height>120</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>40</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<DataItem>
					<Id>1711528059291</Id>
					<Expression><![CDATA[Num_A_Extra_Plates]]></Expression>
					<Color>-2448096</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[None]]></Title>
					</DataItem>
					<DataItem>
					<Id>1711528059292</Id>
					<Expression><![CDATA[Num_B_Extra_Plates]]></Expression>
					<Color>-9728477</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Small]]></Title>
					</DataItem>
					<DataItem>
					<Id>1711528059293</Id>
					<Expression><![CDATA[Num_C_Extra_Plates]]></Expression>
					<Color>-16728065</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Normal]]></Title>
					</DataItem>
					<DataItem>
					<Id>1711528059294</Id>
					<Expression><![CDATA[Num_D_Extra_Plates]]></Expression>
					<Color>-4565549</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Large]]></Title>
					</DataItem>
					<ScaleFromExpression><![CDATA[0]]></ScaleFromExpression>
					<ScaleToExpression><![CDATA[n_Agents + 1]]></ScaleToExpression>
					<ScaleType>FIXED</ScaleType>
					<Bars>
						<Direction>UP</Direction>
						<RelativeWidth>0.8</RelativeWidth>
					</Bars>
    			</BarChart>
				<Text>
					<Id>1711528076401</Id>
					<Name><![CDATA[text20]]></Name>
					<X>300</X><Y>210</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Portion Size Extra Plates]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
    			<BarChart>
					<Id>1711535783517</Id>
					<Name><![CDATA[Number_Of_Servings3]]></Name>
					<X>10</X><Y>380</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0.51]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>250</Width>
					<Height>210</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>30</XOffset>
						<YOffset>40</YOffset>
						<Width>200</Width>
						<Height>120</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>40</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<DataItem>
					<Id>0</Id>
					<Expression><![CDATA[Num_lack_time_1st_Plt]]></Expression>
					<Color>-14774017</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[No Time]]></Title>
					</DataItem>
					<DataItem>
					<Id>1711535783511</Id>
					<Expression><![CDATA[Num_finish_1_1st_Plt]]></Expression>
					<Color>-16744448</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Fin (H&F)]]></Title>
					</DataItem>
					<DataItem>
					<Id>1711535783512</Id>
					<Expression><![CDATA[Num_leave_1_1st_Plt]]></Expression>
					<Color>-16777216</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Lea (H&F)]]></Title>
					</DataItem>
					<DataItem>
					<Id>1711535783513</Id>
					<Expression><![CDATA[Num_finish_2_1st_Plt]]></Expression>
					<Color>-6632142</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Fin (C&S)]]></Title>
					</DataItem>
					<DataItem>
					<Id>1711535783514</Id>
					<Expression><![CDATA[Num_leave_2_1st_Plt]]></Expression>
					<Color>-8355712</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Lea (C&S)]]></Title>
					</DataItem>
					<ScaleFromExpression><![CDATA[0]]></ScaleFromExpression>
					<ScaleToExpression><![CDATA[n_Agents + 1]]></ScaleToExpression>
					<ScaleType>FIXED</ScaleType>
					<Bars>
						<Direction>UP</Direction>
						<RelativeWidth>0.8</RelativeWidth>
					</Bars>
    			</BarChart>
				<Text>
					<Id>1711535840174</Id>
					<Name><![CDATA[text21]]></Name>
					<X>50</X><Y>400</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[No Time/Finish/Leave 1st Plate]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
    			<BarChart>
					<Id>1711536092140</Id>
					<Name><![CDATA[Number_Of_Servings4]]></Name>
					<X>250</X><Y>380</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<AutoUpdate>true</AutoUpdate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1702454400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0.51]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Width>250</Width>
					<Height>210</Height>
					<BackgroundColor/>
					<BorderColor/>
					<ChartArea>
						<XOffset>30</XOffset>
						<YOffset>40</YOffset>
						<Width>200</Width>
						<Height>120</Height>
						<BackgroundColor>-1</BackgroundColor>
						<BorderColor>-16777216</BorderColor>
						<GridColor>-12566464</GridColor>
					</ChartArea>
					<Legend>
						<Place>SOUTH</Place>
						<TextColor>-16777216</TextColor>
						<Size>40</Size>
					</Legend>
					<Labels>
						<HorLabelsPosition>DEFAULT</HorLabelsPosition>
						<VerLabelsPosition>DEFAULT</VerLabelsPosition>
						<TextColor>-12566464</TextColor>
					</Labels>
					<ShowLegend>true</ShowLegend>
					<DataItem>
					<Id>0</Id>
					<Expression><![CDATA[Num_lack_time_Ext_Plt]]></Expression>
					<Color>-14774017</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[No Time]]></Title>
					</DataItem>
					<DataItem>
					<Id>1711536092134</Id>
					<Expression><![CDATA[Num_finish_1_Ext_Plt]]></Expression>
					<Color>-16744448</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Fin (H&F)]]></Title>
					</DataItem>
					<DataItem>
					<Id>1711536092135</Id>
					<Expression><![CDATA[Num_leave_1_Ext_Plt]]></Expression>
					<Color>-16777216</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Lea (H&F)]]></Title>
					</DataItem>
					<DataItem>
					<Id>1711536092136</Id>
					<Expression><![CDATA[Num_finish_2_Ext_Plt]]></Expression>
					<Color>-6632142</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Fin (C&S)]]></Title>
					</DataItem>
					<DataItem>
					<Id>1711536092137</Id>
					<Expression><![CDATA[Num_leave_2_Ext_Plt]]></Expression>
					<Color>-8355712</Color>
					<Expression2Flag>true</Expression2Flag>
						<Title><![CDATA[Lea (C&S)]]></Title>
					</DataItem>
					<ScaleFromExpression><![CDATA[0]]></ScaleFromExpression>
					<ScaleToExpression><![CDATA[n_Agents + 1]]></ScaleToExpression>
					<ScaleType>FIXED</ScaleType>
					<Bars>
						<Direction>UP</Direction>
						<RelativeWidth>0.8</RelativeWidth>
					</Bars>
    			</BarChart>
				<Text>
					<Id>1711536159571</Id>
					<Name><![CDATA[text22]]></Name>
					<X>290</X><Y>400</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[No Time/Finish/Leave Extra Plates]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1169204989640</Id>
			<Name><![CDATA[Person]]></Name>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1414070861868</Id>
				<Name><![CDATA[1414070861868]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameters:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>false</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1414137600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1414070861869</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1696324808941</CurrentLevel>
			<ConnectionsId>1391002816802</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1699968135657</Id>
					<Name><![CDATA[Id]]></Name>
					<X>-130</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699968366252</Id>
					<Name><![CDATA[aspiration_level]]></Name>
					<X>-130</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[get_Main().uniform();]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699968380050</Id>
					<Name><![CDATA[dissonance_tolerance]]></Name>
					<X>-130</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699969057832</Id>
					<Name><![CDATA[chosen_ps]]></Name>
					<X>-130</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[choice]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700230801224</Id>
					<Name><![CDATA[decision_ps]]></Name>
					<X>-130</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA["none"]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705395442264</Id>
					<Name><![CDATA[Gender]]></Name>
					<X>-350</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Gender]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[Male]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705397626819</Id>
					<Name><![CDATA[Business_person]]></Name>
					<X>-350</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705405220926</Id>
					<Name><![CDATA[Breakfast_time]]></Name>
					<X>-350</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705406713726</Id>
					<Name><![CDATA[Time_count]]></Name>
					<X>-350</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0;]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705418467572</Id>
					<Name><![CDATA[Time_needed_for_eating]]></Name>
					<X>-350</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[10]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705418605397</Id>
					<Name><![CDATA[Time_spent_eating]]></Name>
					<X>-350</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705419998528</Id>
					<Name><![CDATA[left_over_from_disliked_food]]></Name>
					<X>-130</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705420019878</Id>
					<Name><![CDATA[plate_number]]></Name>
					<X>-130</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1705480887207</Id>
					<Name><![CDATA[another_plate]]></Name>
					<X>-130</X><Y>400</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708074672237</Id>
					<Name><![CDATA[chosen_lf]]></Name>
					<X>-130</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[choice]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708075714356</Id>
					<Name><![CDATA[self_control]]></Name>
					<X>-350</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708075722462</Id>
					<Name><![CDATA[choosing_ability]]></Name>
					<X>-350</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708087469035</Id>
					<Name><![CDATA[decision_lf1]]></Name>
					<X>-130</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA["none"]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708087491517</Id>
					<Name><![CDATA[decision_lf2]]></Name>
					<X>-130</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA["none"]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708524102981</Id>
					<Name><![CDATA[Time_stop_eating]]></Name>
					<X>-350</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708525509365</Id>
					<Name><![CDATA[left_over_from_liked_food]]></Name>
					<X>-130</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708609814639</Id>
					<Name><![CDATA[Total_time_spent_eating]]></Name>
					<X>-350</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1711546644012</Id>
					<Name><![CDATA[Lack_of_Time]]></Name>
					<X>-350</X><Y>340</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[false]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1699968319026</Id>
					<Name><![CDATA[ActionHistory]]></Name>
					<X>-130</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[Integer]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1699968802845</Id>
					<Name><![CDATA[Motives]]></Name>
					<X>-130</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[motive]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1699968950487</Id>
					<Name><![CDATA[Choices_ps]]></Name>
					<X>-130</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[choice]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1699969112368</Id>
					<Name><![CDATA[alters_representation]]></Name>
					<Description><![CDATA[dictionary, where the key equals to alters id and value is the alter]]></Description>
					<X>-130</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[Integer]]></ElementClass>
						<ValueElementClass><![CDATA[alter]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1708001741961</Id>
					<Name><![CDATA[Choices_lf]]></Name>
					<X>-130</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[choice]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<StatechartElements>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1699969405150</Id>
					<Name><![CDATA[Initialize_Agent]]></Name>
					<X>20</X><Y>140</Y>
					<Label><X>25</X><Y>15</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="140" Height="30">
						<EntryAction><![CDATA[//traceln();
//traceln("Initializing agent: " + this.Id);
//traceln("Day: " + get_Main().Day + " Time: "+ get_Main().time(HOUR));

// initialize agent variables
this.set_guess_type();
this.set_gender();
this.set_self_control();
this.set_choosing_ability();
this.set_dissonance_tolerance();
//traceln ("ID: " + this.Id + " DT: " + this.dissonance_tolerance);

//Initialize motives
this.initialize_motives();

// Initialize choices (portion size AND leftovers) and calculate satisfactions for each motive
this.initialize_choices_ps();
this.initialize_choices_lf();	

// Make a decision, note that lf1 and 2 are set to none to keep track of records
this.decision_ps = make_a_choice_ps(true,false);
this.decision_lf1 = "none"; //make_a_choice_lf1(true,false);
this.decision_lf2 = "none";//make_a_choice_lf2(true,false);
]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1701075129633</Id>
					<Name><![CDATA[Start]]></Name>
					<X>20</X><Y>60</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1705405506143</Id>
					<Name><![CDATA[Set_breakfast_time]]></Name>
					<X>20</X><Y>230</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="140" Height="30">
						<EntryAction><![CDATA[//set breakfast time
this.set_breakfast_time();
// reset time count
this.Time_count = 0;
this.Time_spent_eating = 0;
this.Time_needed_for_eating = 0;
this.Time_stop_eating = 0;
this.Total_time_spent_eating = 0;
//reset plate number
this.plate_number = 0;
this.another_plate = false;
//reset left_overs
this.left_over_from_disliked_food = 0;
this.left_over_from_liked_food = 0;

//traceln();
//traceln("Agent: " + this.Id + " Business?: " + this.Business_person + " Breakfast Time: "+ this.Breakfast_time + " Serving number: " + this.plate_number);
//traceln("Day: " + get_Main().Day + " Time: "+ get_Main().time(HOUR) + " setting breakfast time");

statechart.fireEvent("Move_to_waiting");]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1705406677977</Id>
					<Name><![CDATA[Waiting_for_breakfast]]></Name>
					<X>30</X><Y>300</Y>
					<Label><X>5</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="130" Height="30">
						<EntryAction><![CDATA[//Time_Count is reset every day
if ( this.Time_count == this.Breakfast_time )
{
	//traceln();
	//traceln("Agent: " + this.Id + " Serving number: " + this.plate_number);
	//traceln("Day: " + get_Main().Day + " Time: "+ get_Main().time(HOUR) + " Waiting time over");
		
	statechart.fireEvent("Go_To_Buffet");
}]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1705407566765</Id>
					<Name><![CDATA[Food_serving]]></Name>
					<X>30</X><Y>380</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="130" Height="30">
						<EntryAction><![CDATA[
// make serving decision on the basis of motivations
this.food_portion_decision();

// increase plate number by 1 even if decided portion size is no serving
this.plate_number ++;

statechart.fireEvent("Go_to_eat")]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1705415035212</Id>
					<Name><![CDATA[Eating]]></Name>
					<X>30</X><Y>460</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="130" Height="30">
						<EntryAction><![CDATA[//// BUSINNESS GUESTS
//if time spent eating is over move on OR if total time count is already 180 min (3h), move on 
if ( this.Business_person == true && ( this.Time_count == 120 || this.Time_needed_for_eating == this.Time_spent_eating ) )
{
	//traceln();
	//traceln("Agent: " + this.Id + " Eating Time: "+ this.Time_needed_for_eating + " Serving number: " + this.plate_number);
	//traceln("Day: " + get_Main().Day + " Time: "+ get_Main().time(HOUR) + " eating time over");
	
	//only set time stop eating if something was served!!
	if(!this.chosen_ps.name.equals("No_serving")){ this.Time_stop_eating = this.Time_count; }
	
	//move to next state
	statechart.fireEvent("Eating_over");
}

//// NON-BUSINNESS GUESTS
//if time spent eating is over move on OR if total time count is already 180 min (3h), move on 
if ( this.Business_person != true && ( this.Time_count == 180 || this.Time_needed_for_eating == this.Time_spent_eating ) )
{
	//traceln();
	//traceln("Agent: " + this.Id + " Eating Time: "+ this.Time_needed_for_eating + " Serving number: " + this.plate_number);
	//traceln("Day: " + get_Main().Day + " Time: "+ get_Main().time(HOUR) + " eating time over");
	
	// only set time stop eating if something was served!!
	// Otherwise, the agent will be taken into account as an alter in for the food leftover decision, when nothing was served
	// and thus no decision left over decision was made
	if(!this.chosen_ps.name.equals("No_serving")){ this.Time_stop_eating = this.Time_count; }
	
	// set total time spent eating (this is added to the previous time)
	this.Total_time_spent_eating = this.Total_time_spent_eating + this.Time_spent_eating;
	
	//move to next state
	statechart.fireEvent("Eating_over");
}]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1705420097278</Id>
					<Name><![CDATA[LeftOvers_OtherPlate]]></Name>
					<X>30</X><Y>540</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="130" Height="30">
						<EntryAction><![CDATA[//traceln();
//traceln("Agent: " + this.Id + " Serving number: " + this.plate_number);
//traceln("Day: " + get_Main().Day + " Time: "+ get_Main().time(HOUR) + " calculating left overs and another round?");

/// Decision on left overs leftover, only if chosing something different than no serving
if(!this.chosen_ps.name.equals("No_serving")){this.left_overs_decision();}
//traceln();
//traceln("Agent: " + this.Id + ", Serving number: " + this.plate_number + ", " + this.chosen_ps.name + ", " + this.decision_ps + " Time: " + this.Time_count);

/// stats are called here because to record before making another decision on a plate
this.record_stats();
this.record_leftovers();

////// check time for another plate ///////////////////
/// If business person and before 8.55 am OR non-business person and before 9.55am, , decide on another plate
if( (this.Business_person == true && this.Time_count < 115) ||  (this.Business_person != true && this.Time_count < 175))
{
	//update satisfactions to current fullness and hunger
	this.update_hunger_fullness_satisfactions();
	
	//make decision about going for another plate
	this.Other_plate();
	statechart.fireEvent("Over_Or_Another_plate?");
}
/// else time is over, exit!
else 
{
	this.another_plate = false;
	statechart.fireEvent("Time_Over");
}
]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="Branch" ParentState="ROOT_NODE">
					<Id>1705420217762</Id>
					<Name><![CDATA[branch]]></Name>
					<X>50</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Properties>	
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1705420458830</Id>
					<Name><![CDATA[Breakfast_over]]></Name>
					<X>-150</X><Y>620</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[//When time count is over (3h) go to next state
//Needed so all agents start at the same time next day again
if(this.Time_count > 180) {traceln("Something wrong with the time count, check!!");}
if ( this.Time_count >= 180 )
{
	this.alters_representation.clear();
	//traceln();
	//traceln("Agent: " + this.Id);
	//traceln("Day: " + get_Main().Day + " Time: "+ get_Main().time(HOUR) + " breakfast over");
	statechart.fireEvent("Day_Is_Over");
}]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1705420582830</Id>
					<Name><![CDATA[Another_serving]]></Name>
					<X>160</X><Y>620</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="110" Height="30">
						<EntryAction><![CDATA[//traceln();
//traceln("Agent: " + this.Id);
//traceln("Day: " + get_Main().Day + " Time: "+ get_Main().time(HOUR) + " another serving");

// reset variables: time spent eating, breakfast time and left overs
// time needed for eating is updated when another plate is chosen
this.Time_spent_eating = 0;
this.left_over_from_disliked_food = 0;
this.left_over_from_liked_food = 0;
// we reset these variables to keep track records of leftovers 
// we do not reset the chosen options, only what is recorded in the decisions
this.decision_lf1 = "none";
this.decision_lf2 = "none";


// go to next state
statechart.fireEvent("Go_For_Another_Plate");]]></EntryAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="State" ParentState="ROOT_NODE">
					<Id>1705483650207</Id>
					<Name><![CDATA[Day_over]]></Name>
					<X>-150</X><Y>460</Y>
					<Label><X>10</X><Y>10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties Width="100" Height="30">
						<EntryAction><![CDATA[/*// reset importance of fullness and hunger
/// fullness to 0 and hunger to 1
this.reset_Imp_Sat_Hunger_Fullness();
//reset variables
this.chosen_ps = null;
this.chosen_lf = null;
this.decision_ps = "none";
this.decision_lf1 = "none";
this.decision_lf2 = "none";
this.Lack_of_Time = false;
*/]]></EntryAction>
						<ExitAction><![CDATA[//traceln();
//traceln("Agent: " + this.Id);
//traceln("Day: " + get_Main().Day + " Time: "+ get_Main().time(HOUR) + " day over");
]]></ExitAction>
						<FillColor/>
					</Properties>
				</StatechartElement>
				<StatechartElement Class="EntryPoint" ParentState="ROOT_NODE">
					<Id>1699969405160</Id>
					<Name><![CDATA[statechart]]></Name>
					<X>90</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>40</Y></Point>
					</Points>
					<Properties Target="1701075129633">
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1700230498504</Id>
					<Name><![CDATA[transition]]></Name>
					<X>90</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>60</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1699969405150" Target="1705405506143" Trigger="timeout">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[0.5]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1701075158857</Id>
					<Name><![CDATA[transition5]]></Name>
					<X>90</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1701075129633" Target="1699969405150" Trigger="timeout">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[0.5]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1705406784108</Id>
					<Name><![CDATA[transition7]]></Name>
					<X>90</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>40</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1705405506143" Target="1705406677977" Trigger="message">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[equalsTo]]></FilterType>
						<EqualsExpression><![CDATA["Move_to_waiting"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1705406880480</Id>
					<Name><![CDATA[transition8]]></Name>
					<X>100</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>30</Y></Point>
						<Point><X>40</X><Y>30</Y></Point>
						<Point><X>40</X><Y>0</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1705406677977" Target="1705406677977" Trigger="timeout">
						<Action><![CDATA[this.Time_count ++;]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1705407046246</Id>
					<Name><![CDATA[transition9]]></Name>
					<X>60</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1705406677977" Target="1705407566765" Trigger="message">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[equalsTo]]></FilterType>
						<EqualsExpression><![CDATA["Go_To_Buffet"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1705415085003</Id>
					<Name><![CDATA[transition10]]></Name>
					<X>60</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1705407566765" Target="1705415035212" Trigger="message">
						<Action><![CDATA[this.Set_time_needed_for_eating();]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[5]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[equalsTo]]></FilterType>
						<EqualsExpression><![CDATA["Go_to_eat"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1705419239057</Id>
					<Name><![CDATA[transition11]]></Name>
					<X>100</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>30</Y></Point>
						<Point><X>40</X><Y>30</Y></Point>
						<Point><X>40</X><Y>0</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1705415035212" Target="1705415035212" Trigger="timeout">
						<Action><![CDATA[this.Time_count ++;
this.Time_spent_eating ++;]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1705419364975</Id>
					<Name><![CDATA[transition1]]></Name>
					<X>60</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1705415035212" Target="1705420097278" Trigger="message">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[equalsTo]]></FilterType>
						<EqualsExpression><![CDATA["Eating_over"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1705420226335</Id>
					<Name><![CDATA[transition2]]></Name>
					<X>50</X><Y>570</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>50</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1705420097278" Target="1705420217762" Trigger="message">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[equalsTo]]></FilterType>
						<EqualsExpression><![CDATA["Over_Or_Another_plate?"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1705420301960</Id>
					<Name><![CDATA[transition3]]></Name>
					<X>38</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>-88</X><Y>0</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1705420217762" Target="1705420458830" Trigger="timeout">
						<Action><![CDATA[//traceln("Agent: " + this.Id + ", Serving number: " + this.plate_number + ", " + this.chosen_ps.name + ", " + this.decision_ps + " Time: " + this.Time_count);]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1705420468619</Id>
					<Name><![CDATA[transition4]]></Name>
					<X>-110</X><Y>460</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>-221</Y></Point>
						<Point><X>130</X><Y>-220</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1705483650207" Target="1705405506143" Trigger="timeout">
						<Action><![CDATA[/// reset importance of fullness and hunger
/// fullness to 0 and hunger to 1
this.reset_Imp_Sat_Hunger_Fullness();
//reset variables
this.chosen_ps = null;
this.chosen_lf = null;
this.decision_ps = "none";
this.decision_lf1 = "none";
this.decision_lf2 = "none";
this.Lack_of_Time = false;]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[21]]></Code>
							<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1705420534096</Id>
					<Name><![CDATA[transition6]]></Name>
					<X>62</X><Y>630</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>98</X><Y>0</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1705420217762" Target="1705420582830" Trigger="timeout">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
						</Timeout>
						<Condition><![CDATA[this.another_plate == true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>false</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1705420639405</Id>
					<Name><![CDATA[transition12]]></Name>
					<X>220</X><Y>620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>-140</Y></Point>
						<Point><X>-60</X><Y>-140</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1705420582830" Target="1705415035212" Trigger="message">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[5]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[equalsTo]]></FilterType>
						<EqualsExpression><![CDATA["Go_For_Another_Plate"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1705483666798</Id>
					<Name><![CDATA[transition13]]></Name>
					<X>-110</X><Y>620</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>-130</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1705420458830" Target="1705483650207" Trigger="message">
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[equalsTo]]></FilterType>
						<EqualsExpression><![CDATA["Day_Is_Over"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1705483718174</Id>
					<Name><![CDATA[transition14]]></Name>
					<X>-110</X><Y>650</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>0</X><Y>30</Y></Point>
						<Point><X>41</X><Y>30</Y></Point>
						<Point><X>40</X><Y>0</Y></Point>
					</Points>
					<IconOffset>20.0</IconOffset>
					<Properties Source="1705420458830" Target="1705420458830" Trigger="timeout">
						<Action><![CDATA[this.Time_count ++;]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[MINUTE]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[unconditionally]]></FilterType>
						<EqualsExpression><![CDATA["text"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
				<StatechartElement Class="Transition" ParentState="ROOT_NODE">
					<Id>1708340822373</Id>
					<Name><![CDATA[transition15]]></Name>
					<X>30</X><Y>560</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<Points>
						<Point><X>0</X><Y>0</Y></Point>
						<Point><X>-100</X><Y>0</Y></Point>
						<Point><X>-100</X><Y>60</Y></Point>
					</Points>
					<IconOffset>70.0</IconOffset>
					<Properties Source="1705420097278" Target="1705420458830" Trigger="message">
						<Action><![CDATA[//traceln("Agent: " + this.Id + ", Serving number: " + this.plate_number + ", " + this.chosen_ps.name + ", " + this.decision_ps + " Time: " + this.Time_count);]]></Action>
						<Timeout Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
						</Timeout>
						<Condition><![CDATA[true]]></Condition>
						<Rate Class="CodeUnitValue">
							<Code><![CDATA[1]]></Code>
							<Unit Class="RateUnits"><![CDATA[PER_DAY]]></Unit>
						</Rate>
						<MessageType><![CDATA[Object]]></MessageType>
						<DefaultTransition>true</DefaultTransition>
						<FilterType><![CDATA[equalsTo]]></FilterType>
						<EqualsExpression><![CDATA["Time_Over"]]></EqualsExpression>
						<SatisfiesExpression><![CDATA[true]]></SatisfiesExpression>
					</Properties>	
				</StatechartElement>
			</StatechartElements>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1699969446353</Id>
					<Name><![CDATA[Signal_or_Enquire]]></Name>
					<X>830</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/*Map<String, Double> evaluation_dict_social = new HashMap<>();
Map<String, Double> evaluation_dict_non_social = new HashMap<>();
evaluation_dict_social = this.chosen.get_evaluation_dict_social(this.Motives);
evaluation_dict_non_social = this.chosen.get_evaluation_dict_non_social(this.Motives);

// identify social and nonsocial dilemma
// TRUE if at least one social evaluation is negative and all non-social are positive 
boolean dilemma_social = this.identify_dilemma(evaluation_dict_social, evaluation_dict_non_social);
// TRUE if at least one non-social evaluation is negative and all social are positive 
boolean dilemma_non_social = this.identify_dilemma(evaluation_dict_non_social, evaluation_dict_social);
double dissonance_strength = this.chosen.calculate_dissonance_strength(this.Motives, this.dissonance_tolerance)[0];


if (dissonance_strength > 0)
{
	// if both dilemmas are true
	if (dilemma_social && dilemma_non_social)
	{
		if (uniform() < 0.5)
		{
			this.signal();
		}else
		{
			this.inquire();
		}
	 // if not both dilemmas, check social one
    }else if (dilemma_social)
    {
    	this.signal();
     // if not social dilemma, check non_social one
    }else if (dilemma_non_social)
    {
     	this.inquire();
    }
    // update social motives
    this.update_social_motive_of_choices(social);
}*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1699969469392</Id>
					<Name><![CDATA[signal]]></Name>
					<X>850</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/*/ get alter representation for signaling
alter alter_representation = this.sort_for_signaling(); //  # alterRepresentation
// set alter representation to signaled
alter_representation.signaled = true;
// get the real person
Person real_alter = alter_representation.Alter_agent; //  # alterAgent
// set the real person to receiving signal from ego
traceln("SIGNALING agent " + this.Id + " RECEIVING agent " + alter_representation.Id );
traceln("RECEIVING Agent " + alter_representation.Id + " Updates alter representation of SIGNALING agent " + real_alter.alters_representation.get(this.Id).Id);
traceln("Old choice = " + real_alter.alters_representation.get(this.Id).chosen.name);
traceln("Old Choice A sat= " + real_alter.alters_representation.get(this.Id).Alter_agent.Choices.get(0).satisfactions + ", Old Choice B sat= " + real_alter.alters_representation.get(this.Id).Alter_agent.Choices.get(1).satisfactions);
traceln("Old Choice A tot sat= " + real_alter.alters_representation.get(this.Id).choice_list.get(0).total_satisfaction + ", Old Choice B tot sat= " + real_alter.alters_representation.get(this.Id).choice_list.get(1).total_satisfaction);
traceln("Old persuasions sending Choice A= " + real_alter.alters_representation.get(this.Id).persuasion.get("sending").get("Choice A"));
traceln("Old persuasions receiving Choice b= " + real_alter.alters_representation.get(this.Id).persuasion.get("receiving").get("Choice B"));

real_alter.receive_signal(this.Id);

traceln("RECEIVING Agent " + alter_representation.Id + " Updates alter representation of SIGNALING agent " + real_alter.alters_representation.get(this.Id).Id);
traceln("New alter choice = " + real_alter.alters_representation.get(this.Id).chosen.name);
traceln("New alter choice A sat= " + real_alter.alters_representation.get(this.Id).Alter_agent.Choices.get(0).satisfactions + ", New alter choice B sat= " + real_alter.alters_representation.get(this.Id).Alter_agent.Choices.get(1).satisfactions);
traceln("New Choice A tot sat= " + real_alter.alters_representation.get(this.Id).choice_list.get(0).total_satisfaction + ", New Choice B tot sat= " + real_alter.alters_representation.get(this.Id).choice_list.get(1).total_satisfaction);
traceln("New persuasions sending Choice A= " + real_alter.alters_representation.get(this.Id).persuasion.get("sending").get("Choice A"));
traceln("New persuasions receiving Choice b= " + real_alter.alters_representation.get(this.Id).persuasion.get("receiving").get("Choice B"));

// update the choice of the real alter in alter representation
alter_representation.update_chosen(real_alter.chosen);
// update ego social motives
traceln("");
traceln("SIGNALING AGENT OLD VALUES");
traceln("ID: " + this.Id + ", " + ", CHOICE: " + this.chosen.name);
traceln("Choice A sat= " + this.Choices.get(0).satisfactions + ", Choice B sat= " + this.Choices.get(1).satisfactions);
this.update_social_motive_of_choices(social);
// update decision
this.decision = this.make_a_choice(false);
traceln("");
traceln("SIGNALING AGENT NEW VALUES ");
traceln("ID: " + this.Id + ", " + ", CHOICE: " + this.chosen.name);
traceln("Choice A sat= " + this.Choices.get(0).satisfactions + ", Choice B sat= " + this.Choices.get(1).satisfactions);
traceln("");
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1699969470548</Id>
					<Name><![CDATA[inquire]]></Name>
					<X>1020</X><Y>270</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/* get alter representation for inquiring
alter alter_representation = this.sort_for_inquiring(); //  # alterRepresentation
// set alter representation to inquired
alter_representation.inquired = true;
// get the real person
Person real_alter = alter_representation.Alter_agent; //  # alterAgent
// set the real person to inquiring signal from ego
traceln("INQUIRING agent " + this.Id + " SENDING agent " + alter_representation.Id );
traceln("SENDING Agent " + alter_representation.Id + " Updates alter representation of INQUIRING agent " + real_alter.alters_representation.get(this.Id).Id);
traceln("Old choice = " + real_alter.alters_representation.get(this.Id).chosen.name);
traceln("Old Choice A sat= " + real_alter.alters_representation.get(this.Id).Alter_agent.Choices.get(0).satisfactions + ", Old Choice B sat= " + real_alter.alters_representation.get(this.Id).Alter_agent.Choices.get(1).satisfactions);
traceln("Old Choice A tot sat= " + real_alter.alters_representation.get(this.Id).choice_list.get(0).total_satisfaction + ", Old Choice B tot sat= " + real_alter.alters_representation.get(this.Id).choice_list.get(1).total_satisfaction);
traceln("Old persuasions sending Choice A= " + real_alter.alters_representation.get(this.Id).persuasion.get("sending").get("Choice A"));
traceln("Old persuasions receiving Choice b= " + real_alter.alters_representation.get(this.Id).persuasion.get("receiving").get("Choice B"));

real_alter.receive_inquire(this);

traceln("SENDING Agent " + alter_representation.Id + " Updates alter representation of INQUIRING agent " + real_alter.alters_representation.get(this.Id).Id);
traceln("New alter choice = " + real_alter.alters_representation.get(this.Id).chosen.name);
traceln("New alter choice A sat= " + real_alter.alters_representation.get(this.Id).Alter_agent.Choices.get(0).satisfactions + ", New alter choice B sat= " + real_alter.alters_representation.get(this.Id).Alter_agent.Choices.get(1).satisfactions);
traceln("New Choice A tot sat= " + real_alter.alters_representation.get(this.Id).choice_list.get(0).total_satisfaction + ", New Choice B tot sat= " + real_alter.alters_representation.get(this.Id).choice_list.get(1).total_satisfaction);
traceln("New persuasions sending Choice A= " + real_alter.alters_representation.get(this.Id).persuasion.get("sending").get("Choice A"));
traceln("New persuasions receiving Choice b= " + real_alter.alters_representation.get(this.Id).persuasion.get("receiving").get("Choice B"));

// set EGO's representation in real alter to the update choice of EGO
real_alter.alters_representation.get(this.Id).update_chosen(this.chosen);
// update the social motives of the real alter
traceln("");
traceln("INQUIRING AGENT OLD VALUES");
traceln("ID: " + this.Id + ", " + ", CHOICE: " + this.chosen.name);
traceln("Choice A sat= " + this.Choices.get(0).satisfactions + ", Choice B sat= " + this.Choices.get(1).satisfactions);

real_alter.update_social_motive_of_choices(social);
// update the decision of the real alter
real_alter.decision = real_alter.make_a_choice(false);      

traceln("");
traceln("INQUIRING AGENT NEW VALUES");
traceln("ID: " + this.Id + ", " + ", CHOICE: " + this.chosen.name);
traceln("Choice A sat= " + this.Choices.get(0).satisfactions + ", Choice B sat= " + this.Choices.get(1).satisfactions);
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1700211102087</Id>
					<Name><![CDATA[initialize_motives]]></Name>
					<X>170</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[int num_motives = 6;//(int) selectFrom(motives_table).count();
for(int i = 0; i < num_motives; i++)
{
	motive m = get_Main().add_motives();
	m.name = selectFrom(motives_table).list(motives_table.name).get(i);
	m.type = selectFrom(motives_table).list(motives_table.type).get(i);
	/// calculate importance of the motive
	double ave = selectFrom(motives_table).list(motives_table.average).get(i);
	double sd = selectFrom(motives_table).list(motives_table.sd).get(i);
	double min_m = selectFrom(motives_table).list(motives_table.low).get(i);
	double max_m = selectFrom(motives_table).list(motives_table.upp).get(i);
	m.importance = get_Main().normal(min_m, max_m, ave, sd);
	this.Motives.add(m);
	//traceln ("ID: " + this.Id + " Motive: " + this.Motives.get(i).name + " " + this.Motives.get(i).type + " " + this.Motives.get(i).importance);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1700211188137</Id>
					<Name><![CDATA[initialize_choices_ps]]></Name>
					<X>170</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/// choice A, nothing
choice A = get_Main().add_choices();
A.name = "No_serving";

//// choice B, small size
choice B = get_Main().add_choices();
B.name = "Small_serving";

//// choice C, normal serving
choice C = get_Main().add_choices();
C.name = "Normal_serving";

//// choice D, large serving
choice D = get_Main().add_choices();
D.name = "Large_serving";

// calculate satisfactions for each choice and each motive
for(motive m: this.Motives)
{
	// we do not care about sustainability motive for this decision
	if(!m.name.equals("sustainability"))
	{
		///////////////////////////////////////////////////////
		/// satisfactions of choice A, no serving
		double satisfaction_ca = 0;
		if(m.type == social) { satisfaction_ca = 0;}
		else
		{
			if(m.name.equals("hunger"))
			{
				double ave = get_mean_hunger(m.importance, A.name);
				double sd = selectFrom(choices_ps_not_satisfaction).where(choices_ps_not_satisfaction.name.eq(m.name)).firstResult(choices_ps_not_satisfaction.sd);
				satisfaction_ca = get_Main().normal(-1, 1, ave, sd);
			}
			else if(m.name.equals("fullness"))
			{
				double ave = get_mean_fullness(m.importance, A.name);
				double sd = selectFrom(choices_ps_not_satisfaction).where(choices_ps_not_satisfaction.name.eq(m.name)).firstResult(choices_ps_not_satisfaction.sd);
				satisfaction_ca = get_Main().normal(-1, 1, ave, sd);
			}
			else
			{
				double ave = selectFrom(choices_ps_not_satisfaction).where(choices_ps_not_satisfaction.name.eq(m.name)).firstResult(choices_ps_not_satisfaction.mean);
				double sd = selectFrom(choices_ps_not_satisfaction).where(choices_ps_not_satisfaction.name.eq(m.name)).firstResult(choices_ps_not_satisfaction.sd);
				satisfaction_ca = get_Main().normal(-1, 1, ave, sd);
			}
		}
		A.satisfactions.put(m.name, satisfaction_ca);
	
		///////////////////////////////////////////////////////
		/// satisfactions of choice B, small plate
		double satisfaction_cb = 0;
		if(m.type == social) { satisfaction_cb = 0;}
		else
		{
			if(m.name.equals("hunger"))
			{
				double ave = get_mean_hunger(m.importance, B.name);
				double sd = selectFrom(choices_ps_sm_satisfaction).where(choices_ps_sm_satisfaction.name.eq(m.name)).firstResult(choices_ps_sm_satisfaction.sd);
				satisfaction_cb = get_Main().normal(-1, 1, ave, sd);
			}
			else if(m.name.equals("fullness"))
			{
				double ave = get_mean_fullness(m.importance, B.name);
				double sd = selectFrom(choices_ps_sm_satisfaction).where(choices_ps_sm_satisfaction.name.eq(m.name)).firstResult(choices_ps_sm_satisfaction.sd);
				satisfaction_cb = get_Main().normal(-1, 1, ave, sd);
			}
			else
			{
				double ave = selectFrom(choices_ps_sm_satisfaction).where(choices_ps_sm_satisfaction.name.eq(m.name)).firstResult(choices_ps_sm_satisfaction.mean);
				double sd = selectFrom(choices_ps_sm_satisfaction).where(choices_ps_sm_satisfaction.name.eq(m.name)).firstResult(choices_ps_sm_satisfaction.sd);
				satisfaction_cb = get_Main().normal(-1, 1, ave, sd);
			}
		}
		B.satisfactions.put(m.name, satisfaction_cb);
	
		/////////////////////////////////////////////////////
		/// satisfactions of choice C, normal plate
		double satisfaction_cc = 0;
		if(m.type == social) { satisfaction_cc = 0;}
		else
		{
			if(m.name.equals("hunger"))
			{
				double ave = get_mean_hunger(m.importance, C.name);
				double sd = selectFrom(choices_ps_nor_satisfaction).where(choices_ps_nor_satisfaction.name.eq(m.name)).firstResult(choices_ps_nor_satisfaction.sd);
				satisfaction_cc = get_Main().normal(-1, 1, ave, sd);
			}
			else if(m.name.equals("fullness"))
			{
				double ave = get_mean_fullness(m.importance, C.name);
				double sd = selectFrom(choices_ps_nor_satisfaction).where(choices_ps_nor_satisfaction.name.eq(m.name)).firstResult(choices_ps_nor_satisfaction.sd);
				satisfaction_cc = get_Main().normal(-1, 1, ave, sd);
			}
			else
			{
				double ave = selectFrom(choices_ps_nor_satisfaction).where(choices_ps_nor_satisfaction.name.eq(m.name)).firstResult(choices_ps_nor_satisfaction.mean);
				double sd = selectFrom(choices_ps_nor_satisfaction).where(choices_ps_nor_satisfaction.name.eq(m.name)).firstResult(choices_ps_nor_satisfaction.sd);
				satisfaction_cc = get_Main().normal(-1, 1, ave, sd);
			}
		}
		C.satisfactions.put(m.name, satisfaction_cc);
	
		/////////////////////////////////////////////////////
		/// satisfactions of choice D, large plate
		double satisfaction_cd = 0;
		if(m.type == social) { satisfaction_cd = 0;}
		else
		{
			if(m.name.equals("hunger"))
			{
				double ave = get_mean_hunger(m.importance, D.name);
				double sd = selectFrom(choices_ps_lar_satisfaction).where(choices_ps_lar_satisfaction.name.eq(m.name)).firstResult(choices_ps_lar_satisfaction.sd);
				satisfaction_cd = get_Main().normal(-1, 1, ave, sd);
			}
			else if(m.name.equals("fullness"))
			{
				double ave = get_mean_fullness(m.importance, D.name);
				double sd = selectFrom(choices_ps_lar_satisfaction).where(choices_ps_lar_satisfaction.name.eq(m.name)).firstResult(choices_ps_lar_satisfaction.sd);
				satisfaction_cd = get_Main().normal(-1, 1, ave, sd);
			}
			else
			{
				double ave = selectFrom(choices_ps_lar_satisfaction).where(choices_ps_lar_satisfaction.name.eq(m.name)).firstResult(choices_ps_lar_satisfaction.mean);
				double sd = selectFrom(choices_ps_lar_satisfaction).where(choices_ps_lar_satisfaction.name.eq(m.name)).firstResult(choices_ps_lar_satisfaction.sd);
				satisfaction_cd = get_Main().normal(-1, 1, ave, sd);
			}
		}
		D.satisfactions.put(m.name, satisfaction_cd);
	}
}
this.Choices_ps.add(A);
this.Choices_ps.add(B);
this.Choices_ps.add(C);
this.Choices_ps.add(D);
/*traceln ("ID: " + this.Id + " " + this.Choices.get(0).name + 
		 ", Sat motive 1: " + this.Choices.get(0).satisfactions.get("motive1") + ", Imp motive 1: " + this.Motives.get(0).importance + 
		 ", Sat motive 2: " + this.Choices.get(0).satisfactions.get("motive2") + ", Imp motive 2: " + this.Motives.get(1).importance +
		 ", Sat motive 3: " + this.Choices.get(0).satisfactions.get("motive3") + ", Imp motive 3: " + this.Motives.get(2).importance);
traceln ("ID: " + this.Id + " " + this.Choices.get(1).name + 
		 ", Sat motive 1: " + this.Choices.get(1).satisfactions.get("motive1") + ", Imp motive 1: " + this.Motives.get(0).importance +
		 ", Sat motive 2: " + this.Choices.get(1).satisfactions.get("motive2") + ", Imp motive 2: " + this.Motives.get(1).importance +
		 ", Sat motive 3: " + this.Choices.get(1).satisfactions.get("motive3") + ", Imp motive 3: " + this.Motives.get(2).importance);
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1700211620139</Id>
					<Name><![CDATA[make_a_choice_ps]]></Name>
					<Description><![CDATA[default value of basic choice is false]]></Description>
					<X>300</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[basic_choice]]></Name>
						<Type><![CDATA[boolean]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[true_decision]]></Name>
						<Type><![CDATA[boolean]]></Type>
					</Parameter>
					<Body><![CDATA[// get all values for calculation of choice
List<Double> all_total_satisfaction = new ArrayList<Double>();
List<Double> all_dissonance_strength = new ArrayList<Double>();
List<Double> all_dissonance_status = new ArrayList<Double>();
List<Double> all_experiential_satisfaction = new ArrayList<Double>();
double max_total_satisfaction = Double.NEGATIVE_INFINITY;
double min_total_dissonance_status = Double.POSITIVE_INFINITY;
double max_experiential_satisfaction = Double.NEGATIVE_INFINITY;
        
/// create a new list of motives
List<motive> tempMotiveList = new LinkedList();

/// select motives relevant for FOOD PORTION
/// If basic choice, remove social motives, otherwise keep all motives
if (basic_choice) 
{ 
	tempMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("hunger") ) );
	tempMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("bec_thin") ) );
	tempMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("indulgence") ) );
	tempMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("fullness") ) );
	
}
else { 
	tempMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("hunger") ) );
	tempMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("conformism") ) );
	tempMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("bec_thin") ) );
	tempMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("indulgence") ) );
	tempMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("fullness") ) );
}

/// create a list of experiential motives
List<motive> tempExpMotiveList = new LinkedList();
tempExpMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("hunger") ) );
tempExpMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("indulgence") ) );
tempExpMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("fullness") ) );

// create a list of the two highest experiential motives satisfactions
LinkedList<String> Exp_choice_List = new LinkedList<>();

//// loop through choices
String chosen_1 = "";
String chosen_2 = "";
String chosen_3 = "";
for(choice c : this.Choices_ps)
{
	//traceln ("ID: " + this.Id + " " + c.name);
	String name = c.name;
	/// calculate indexes per choice by going through all motives
	double temp_total_satisfaction = c.calculate_total_satisfaction(tempMotiveList);
	double[] result = c.calculate_dissonance_strength(tempMotiveList, dissonance_tolerance);
	double temp_dissonance_strength = result[0];
	double temp_dissonance_status = result[1];
	StatisticsDiscrete temp_experiential_satisfaction = new StatisticsDiscrete();
	if(tempExpMotiveList != null) { for(motive m : tempExpMotiveList) { temp_experiential_satisfaction.add( (c.satisfactions.get(m.name) * m.importance) ); } }
	
	/// collect indexes per choice A or B
	all_total_satisfaction.add(temp_total_satisfaction);
    all_dissonance_strength.add(temp_dissonance_strength);
    all_dissonance_status.add(temp_dissonance_status);
    all_experiential_satisfaction.add(temp_experiential_satisfaction.mean());
    
    // choose choice according to satisfaction, option 1
    if (temp_total_satisfaction > max_total_satisfaction)
    {
    	chosen_1 = c.name;
        max_total_satisfaction = temp_total_satisfaction;
        //traceln("temp_total_satisfaction > max_total_satisfaction == TRUE");
    }
    // choose choice according to dissnance, option 2
    if (temp_dissonance_status < min_total_dissonance_status)
    {
    	chosen_2 = c.name;
        min_total_dissonance_status = temp_dissonance_status;
        //traceln("temp_dissonance_status < min_total_dissonance_status == TRUE");
    }
    // choose choice according to experiential satisfaction, option 3
    if (temp_experiential_satisfaction.mean() > max_experiential_satisfaction)
    {
    	chosen_3 = c.name;
        max_experiential_satisfaction = temp_experiential_satisfaction.mean();
        if (Exp_choice_List.size() == 2) { Exp_choice_List.removeFirst(); }
        Exp_choice_List.add(c.name);
        //traceln("temp_experiential_satisfaction.mean() > max_experiential_satisfaction == TRUE");
    }    
}
//traceln ("ID: " + this.Id + " " +", chosen1: " + chosen_1 + ", chosen2: " + chosen_2 + ", chosen3: " + chosen_3);

// option 3 = habit, nothing changes
String result = "";
if (basic_choice && !true_decision) 
{ 
	String name = chosen_1;
	this.chosen_ps = findAll(this.Choices_ps, c -> c.name.equals(name)).get(0);
    result = "Basic_choice";
}
// Checks if one choice gives 10% more satisfaction than the other
else if(further_comparison_needed(2, all_total_satisfaction, "descending") != true)
{
	String name = chosen_1;
	this.chosen_ps = findAll(this.Choices_ps, c -> c.name.equals(name)).get(0);
    result = "Satisfaction";
}
// If both satisfactions are similar (within 10% range), check dissonances
else if(further_comparison_needed(1, all_dissonance_status, "ascending") != true)
{
	String name = chosen_2;
	this.chosen_ps = findAll(this.Choices_ps, c -> c.name.equals(name)).get(0);
    result = "Dissonances";
}
// If dissonances are similar (within 10%), check experiential satisfaction
else if(further_comparison_needed(2, all_experiential_satisfaction,"descending") != true)
{
	String name = chosen_3;
	this.chosen_ps = findAll(this.Choices_ps, c -> c.name.equals(name)).get(0);
    result = "Experiential";
}
// if experiental satisfactions are similar (wihtin 10% range) go with habit
// no random because randomizer in netlogo works different from python
else 
{
	/// selects at random one of the two most satisfactions, based on experience
	if(Exp_choice_List.size() > 1)
	{
		int randomIndex = 0;
		if(uniform() < 0.5){ randomIndex = 1;}
		String name = Exp_choice_List.get(randomIndex);
		this.chosen_ps = findAll(this.Choices_ps, c -> c.name.equals(name)).get(0);
		result = "Exp_Random";
	}
	else
	{
		String name = Exp_choice_List.get(0);
		this.chosen_ps = findAll(this.Choices_ps, c -> c.name.equals(name)).get(0);
		result = "Exp_only_one_to_choose_from";
	}
}
//traceln("result: " + result + ", " + this.chosen.name);
//traceln();
return result;

    ]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[boolean]]></ReturnType>
					<Id>1700229063807</Id>
					<Name><![CDATA[further_comparison_needed]]></Name>
					<X>430</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[theoretical_range]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[comparison_dimensions]]></Name>
						<Type><![CDATA[List<Double>]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[order]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[boolean result = false;

// Sort the list in descending/ascending order
// Done because dissonances should be the lowest
if(order.equals("descending")){ Collections.sort(comparison_dimensions, Collections.reverseOrder()); }
if (order.equals("ascending")) { Collections.sort(comparison_dimensions); }

// Create a new list to store the two highest values
List<Double> Values_to_compare = new ArrayList<Double>();

// Add the first two elements (highest values) to the new list
Values_to_compare.add(comparison_dimensions.get(0));
Values_to_compare.add(comparison_dimensions.get(1));

for (int i=0; i<Values_to_compare.size()-1; i++)
{
	if ( Math.abs(Values_to_compare.get(i + 1) - Values_to_compare.get(i) ) < (0.1 * theoretical_range) )
	{
		result = true;
	}
	// else neede when there is more than one choice
    // because if elem2 - elem 1 < 0.1 returns true BUT if elem3 - 2 > 0.1 it will still return TRUE BUT should return false!
	else
	{
		result = false;
	}
}
return result;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1700230678129</Id>
					<Name><![CDATA[initialize_alter_representations]]></Name>
					<X>410</X><Y>350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[choice_type]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[traceln("ID: " + this.Id + " Type: " + choice_type + " plate number: " + this.plate_number);
if(this.Id == 13)
{
	double test = 2.3;
}

/// clean the representation of alters in alters_representation collection
this.alters_representation.clear();

List <Person> MyAlters = new LinkedList<Person>();
//create a list of alters that:
// (1) HAVE serve themselves some food 
// (2) stoped eating the last 5 min before you
// (3) did not leave because of lack of time (if so, no leftover decision was made!)
if(choice_type.equals("Left_Food"))
{
	MyAlters.addAll(findAll(get_Main().People, p ->  p.Time_stop_eating > (this.Time_stop_eating - 5)  &&  
											         p.Time_stop_eating < this.Time_stop_eating &&
											         p.Lack_of_Time == false &&
											        !p.chosen_ps.name.equals("No_serving") ) );	
}
//create a list of alters with a breakfast time same or 5 min before you
if(choice_type.equals("Food_Portion"))
{
	MyAlters.addAll(findAll(get_Main().People, p ->  p.Breakfast_time > (this.Breakfast_time - 5)  &&  p.Breakfast_time < this.Breakfast_time ));	
}

//traceln("alters influencing: " + MyAlters.size() + " Breakfast_time: " + this.Time_count + " Day: " + get_Main().Day + " Time: "+ get_Main().time(HOUR) + " My_Time_Count: " + this.Time_count + " Serving: " + this.plate_number + " Agent: " + this.Id);


// create alter representation data for each alter
// HUMAT assumes perfect information on alters choice
//traceln("Ego ID: " + this.Id);
for (Person a: MyAlters)
{
	/// create alter representation
	alter el = get_Main().add_alters();
	
	/// initialize alter representation variables
	el.Alter_agent = a;
	el.Id = a.Id;
	el.chosen_ps = a.chosen_ps;
	el.chosen_lf = a.chosen_lf;
	el.motive_list = a.Motives;
	el.Identity_weight = this.set_identity_weight(a);
	/////// add alter representation to list, the index in the list corresponds to alter's ID number.
	this.alters_representation.put(el.Id,el);
	//traceln("Alter ID: " + el.Id + ", Choice A Tot Sat: " + el.choice_list.get(0).total_satisfaction + ", Choice B Tot Sat= " + el.choice_list.get(1).total_satisfaction);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1700230701929</Id>
					<Name><![CDATA[update_social_motive_of_choices]]></Name>
					<Description><![CDATA[Updates the satisfactions of motives. It only updates the motives of type mot_type]]></Description>
					<X>410</X><Y>370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[motive_type]]></Name>
						<Type><![CDATA[mot_type]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[choice_type]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[//traceln("ID: " + this.Id + " Type: " + choice_type + " plate number: " + this.plate_number);
if(this.Id == 13)
{
	double test = 2.3;
}

// Get a list of all choice names
List<String> choice_names = new ArrayList<String>();
//List<String> neighbor_choices = new ArrayList<String>();
Map<String, Double> neighbor_choices = new HashMap<>();

/// Get a list of choices according to choice type and the choices the neighbors did
if(choice_type.equals("Food_Portion")) 
{ 	for(choice c: this.Choices_ps) { choice_names.add(c.name); } 
	for(alter a: alters_representation.values()) 
	{ 
		String choice = a.chosen_ps.name;
		double value = a.Identity_weight;
		if (!neighbor_choices.containsKey(choice)) {
            neighbor_choices.put(choice, value);
        } else {
            double currentValue = neighbor_choices.get(choice);
            neighbor_choices.put(choice, currentValue + value);
        }		
	}
}
if(choice_type.equals("Left_Food")) 
{ 
	for(choice c: this.Choices_lf) { choice_names.add(c.name); } 
	for(alter a: alters_representation.values()) { 
		String choice = a.chosen_lf.name;
		double value = a.Identity_weight;
		if (!neighbor_choices.containsKey(choice)) {
            neighbor_choices.put(choice, value);
        } else {
            double currentValue = neighbor_choices.get(choice);
            neighbor_choices.put(choice, currentValue + value);
        }		
	}
}

// Count the number of times each choice has been made by neighbors
// Create a Map to store choice counts
Map<String, Double> choice_counts = new HashMap<>();
// Count occurrences of each choice and store in the map
//for (String choice : neighbor_choices) { choice_counts.put(choice, choice_counts.getOrDefault(choice, 0) + 1); }
for (Map.Entry<String, Double> entry : neighbor_choices.entrySet()) {
    String choice = entry.getKey();
    double value = neighbor_choices.get(choice);
    choice_counts.put(choice, value);
}

// Create a dictionary with default values of 0 for all choice names
// Create a Map to store choice percentages with initial value 0
Map<String, Double> choice_percentages = new HashMap<>();
// Initialize the map with default values
for (String name : choice_names) { choice_percentages.put(name, 0.0); }

// Calculate the percentage of neighbors who have made each choice, if the choice exists
// Calculate the sum of all counts
double count_sum = 0.0;
for (Double value : choice_counts.values()) { count_sum += value; }
for (Map.Entry<String, Double> entry : choice_counts.entrySet()) 
{
	String name = entry.getKey();
    double count = entry.getValue();
    if (choice_percentages.containsKey(name)) 
    {
    	double percentage = count / count_sum;
    	choice_percentages.put(name,percentage);
    }
}
//traceln();
//traceln("Time: " + this.Time_count + " Net Size: " + this.alters_representation.size() + " Nei choices: " + neighbor_choices);

/// get the list of motives that are of motive_type ("social")
List<motive> motive_satisfaction_to_modify = new LinkedList<>();
motive_satisfaction_to_modify = findAll(this.Motives, m -> m.type == motive_type);

/// for each of them, modify satisfaction according to the choice seen in the alters
/// NOTE, ALL motives of the motive_type ("social") will get the same satisfaction value!
/// first loop through each choice (A or B)
//traceln("ID: " + this.Id + ", Nei Choices: " + neighbor_choices + ", Choices counts: " + choice_counts + ", Nei Choices Percentages: " + choice_percentages);
if(choice_type.equals("Food_Portion"))
{
	for(choice c: this.Choices_ps)
	{
		/// loop through each motive of motive_type ("social")
		for (motive m : motive_satisfaction_to_modify) 
		{
			String motive_name = m.name;
			if (c.satisfactions.containsKey(motive_name))
			{
				/// get old satisfaction
				double oldSatisfaction = c.satisfactions.get(motive_name);
				/// get percentage of alters choosing the specific choice
				double norm_variable = choice_percentages.get(c.name);
				/// calculate new satisfaction
        		double newSatisfaction = this.get_normalized_min_max(norm_variable, 0, 1, -1, 1);

	            // Update the satisfaction value in the specific choice
    	        c.satisfactions.put(motive_name, newSatisfaction);
        	    //traceln("Choice: " + c.name + ", " + motive_name + ", Old Sat: " + oldSatisfaction + ", New Sat: " + newSatisfaction);
	         } else
    	     {
        	 	// Handle the case where the motive is not present (in initializing)
	        	 // You can choose to log a message or take other appropriate actions
	    	     continue;
    	 	 }
	     }
	}
}
if(choice_type.equals("Left_Food"))
{
	for(choice c: this.Choices_lf)
	{
		/// loop through each motive of motive_type ("social")
		for (motive m : motive_satisfaction_to_modify) 
		{
			String motive_name = m.name;
			if (c.satisfactions.containsKey(motive_name))
			{
				/// get old satisfaction
				double oldSatisfaction = c.satisfactions.get(motive_name);
				/// get percentage of alters choosing the specific choice
				double norm_variable = choice_percentages.get(c.name);
				/// calculate new satisfaction
        		double newSatisfaction = this.get_normalized_min_max(norm_variable, 0, 1, -1, 1);

	            // Update the satisfaction value in the specific choice
    	        c.satisfactions.put(motive_name, newSatisfaction);
        	    //traceln("Choice: " + c.name + ", " + motive_name + ", Old Sat: " + oldSatisfaction + ", New Sat: " + newSatisfaction);
	         } else
    	     {
        	 	// Handle the case where the motive is not present (in initializing)
	        	 // You can choose to log a message or take other appropriate actions
	    	     continue;
    	 	 }
	     }
	}
}
//traceln();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1700233760481</Id>
					<Name><![CDATA[compute_relative_aspiration]]></Name>
					<X>830</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[aspiration_influencing]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[aspiration_influenced]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[/*/ produces values <0 ; 1 > - weighing of the influenced agent's status
// for inquiring the influencing agent is the alter, EGO ASKS THE ALTER
// for signaling the influencing agent is the humat, EGO SIGNALS ALTER
double rel_aspiration = 0.4 + aspiration_influencing - aspiration_influenced;
double result = 0;
if (rel_aspiration > 1) { result = 1; }
else if (rel_aspiration < 0) { result = 0; }
else { result = rel_aspiration;}
result = Math.round(result * 1000.0) / 1000.0;
return result;
*/
return 0;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1700493975633</Id>
					<Name><![CDATA[get_normalized_min_max]]></Name>
					<X>550</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[norm_variable]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[min_old]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[max_old]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[min_new]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[max_new]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double result = 0;
result = min_new + (((norm_variable - min_old) * (max_new - min_new)) / (max_old - min_old));
return result;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1700512046449</Id>
					<Name><![CDATA[prepare]]></Name>
					<X>830</X><Y>380</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/*/ loop through alters and update their representation
for (alter a: this.alters_representation.values())
{
	a.update_alter_representation(this);
}
// update social motives according to the updated alter choices
this.update_social_motive_of_choices(social);
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[boolean]]></ReturnType>
					<Id>1700568910128</Id>
					<Name><![CDATA[identify_dilemma]]></Name>
					<X>850</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[evaluationDict1]]></Name>
						<Type><![CDATA[Map<String, Double>]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[evaluationDict2]]></Name>
						<Type><![CDATA[Map<String, Double>]]></Type>
					</Parameter>
					<Body><![CDATA[/*boolean allPositive1 = true;
for (double evaluation : evaluationDict1.values()) {
	if (evaluation < 0) {
    	allPositive1 = false;
        break;  // No need to continue checking once a negative evaluation is found
    }
}

boolean allPositive2 = false;  // At least one positive evaluation needed
for (double evaluation : evaluationDict2.values()) {
	if (evaluation >= 0) {
    	allPositive2 = true;
        break;  // No need to continue checking once a positive evaluation is found
    }
}
// TRUE if at least one evaluation in Dict1 is negative and all in Dict 2 are positive 
return !allPositive1 && allPositive2;
*/
return false;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[alter]]></ReturnType>
					<Id>1700570779079</Id>
					<Name><![CDATA[sort_for_signaling]]></Name>
					<X>870</X><Y>330</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//signaling-list sorted:
// (1) ascending by signaled? (not signaled to first),
// (2) descending by not the same-choice? (different chosen alternative first), and
// (3) descending by gullibility (the most easily

List<alter> sortedAlterList = new LinkedList();
for (alter a: alters_representation.values()) { sortedAlterList.add(a); }

// Sort by descending relative aspiration signal alter
//for(alter a: sortedAlterList) { traceln("ID: " + a.Id + " Sending, " + " Sum: " + a.get_sum_persuasion("sending")); }
sortedAlterList = sortDescending(sortedAlterList, a -> a.get_sum_persuasion("sending"));
//for(alter a: sortedAlterList) { traceln("ID: " + a.Id + " Sending, " + " Sum: " + a.get_sum_persuasion("sending")); }
// Sort by descending chosen
//for(alter a: sortedAlterList) { traceln("ID: " + a.Id + " Same Chosen, " + (a.chosen.name != this.chosen.name) ); }
Collections.sort(sortedAlterList, Comparator.<alter, Boolean>comparing(a -> a.chosen_ps.name != this.chosen_ps.name).reversed());
//for(alter a: sortedAlterList) { traceln("ID: " + a.Id + " Same Chosen, " + (a.chosen.name != this.chosen.name) ); }
//sortDescending(sortedAlterList, a -> a.chosen.name != this.chosen.name);
// Sort by ascending signaled
//sortedAlterList.get(1).signaled = true;
//for(alter a: sortedAlterList) { traceln("ID: " + a.Id + " Signaled, " + a.signaled); }
Collections.sort(sortedAlterList, Comparator.<alter, Boolean>comparing(a -> a.signaled));
//for(alter a: sortedAlterList) { traceln("ID: " + a.Id + " Signaled, " + a.signaled); }

Map<alter, Map<String, Object>> sortMatrix = new HashMap<>();
for(alter a: sortedAlterList)
{
	/*
	Map<String, Object> Info = new HashMap<>();
    Info.put("chosen",a.chosen.name);
    Info.put("persuasion",a.get_sum_persuasion("signaling"));
    Info.put("signaled?",a.signaled);
    sortMatrix.put(a, Info);
	*/
}
// Return the first element, AlterRepresentation
return sortedAlterList.get(0);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1700577660310</Id>
					<Name><![CDATA[receive_signal]]></Name>
					<Description><![CDATA[The alter being signaled by EGO, updates the alter representation of EGO]]></Description>
					<X>870</X><Y>350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[humat_id]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[/*/ get the AlterRepresentation of signaling humat
// action switches between signaling and inquiring persuasion
alter alter_representation = this.alters_representation.get(humat_id);
// update chosen, choice representation, and persuasion of alter_representation
alter_representation.update_alter_representation(this);
traceln("");
traceln("Receiving Agent " + this.Id);
traceln("Old choice = " + this.chosen.name);
traceln("Old Choice A sat= " + this.Choices.get(0).satisfactions + ", Old Choice B sat= " + this.Choices.get(1).satisfactions);

int index = 0;
for(choice c:this.Choices)
{
	c.update_choice_satisfaction(this, alter_representation, index);
	this.update_social_motive_of_choices(social);
	this.decision = this.make_a_choice(false);
	index ++;
}
traceln("Receiving Agent " + this.Id);
traceln("New choice = " + this.chosen.name);
traceln("New Choice A sat= " + this.Choices.get(0).satisfactions + ", Old Choice B sat= " + this.Choices.get(1).satisfactions);
traceln("");
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[alter]]></ReturnType>
					<Id>1700580574992</Id>
					<Name><![CDATA[sort_for_inquiring]]></Name>
					<X>1040</X><Y>290</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//signaling-list sorted:
// (1) ascending by signaled? (not signaled to first),
// (2) descending by not the same-choice? (different chosen alternative first), and
// (3) descending by gullibility (the most easily

List<alter> sortedAlterList = new LinkedList();
for (alter a: alters_representation.values()) { sortedAlterList.add(a); }

// Sort by decending relative aspiration signal alter
sortedAlterList = sortDescending(sortedAlterList, a -> a.get_sum_persuasion("receiving"));
// Sort by descending chosen
Collections.sort(sortedAlterList, Comparator.<alter, Boolean>comparing(a -> a.chosen_ps.name != this.chosen_ps.name));
//sortDescending(sortedAlterList, a -> a.chosen.name != this.chosen.name);
// Sort by ascending signaled
Collections.sort(sortedAlterList, Comparator.<alter, Boolean>comparing(a -> a.inquired));

// Return the first element, AlterRepresentation
return sortedAlterList.get(0);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1700580660771</Id>
					<Name><![CDATA[receive_inquire]]></Name>
					<X>1040</X><Y>310</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[humat]]></Name>
						<Type><![CDATA[Person]]></Type>
					</Parameter>
					<Body><![CDATA[//humat.receive_signal(this.Id);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1705405276685</Id>
					<Name><![CDATA[set_breakfast_time]]></Name>
					<X>170</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if(this.Business_person)
{
	/// we assume business persons have 2h for breakfast, 7-9am, with average arrival time at 7.30am
	double time = triangular(5, 115, 30);
	this.Breakfast_time = (int)time;
	if(this.Breakfast_time < 5) {this.Breakfast_time = 5;}
	if(this.Breakfast_time > 115) {this.Breakfast_time = 115;}
}else{
	/// we assume non-business persons have 3h for breakfast, 7-10am, with average arrival time at 8.30am
	double time = triangular(5, 175, 90);
	this.Breakfast_time = (int)time;
	if(this.Breakfast_time < 5) {this.Breakfast_time = 5;}
	if(this.Breakfast_time > 175) {this.Breakfast_time = 175;}
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1705480988283</Id>
					<Name><![CDATA[left_overs_decision]]></Name>
					<X>240</X><Y>470</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// calculate left overs from disliked food
this.leftover_Disliked_Food();

// calculate left overs from time available to eat
if(this.Business_person == true && (this.Time_needed_for_eating - this.Time_spent_eating) > 0)
{
	this.leftover_from_limited_time();
	this.Lack_of_Time = true;
	
	// set total time spent eating (this is added to the previous time)
	this.Total_time_spent_eating = this.Total_time_spent_eating + this.Time_spent_eating; 
}

/// calculate leftovers based on motivations
else
{
	this.decide_on_motivations_lf();
	
	// set total time spent eating only if it finished the plate (this is added to the previous time)
	if(!this.chosen_lf.name.equals("finish")){ this.Total_time_spent_eating = this.Total_time_spent_eating + this.Time_spent_eating; }
	
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1705481058724</Id>
					<Name><![CDATA[Other_plate]]></Name>
					<X>240</X><Y>610</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// reset breakfast time to current time, so agents in social network are chosen according to new breakfast time
this.Breakfast_time = this.Time_count;

// make serving decision 
this.food_portion_decision();

// Decided to go for another plate, increase plate number by 1
if(!this.chosen_ps.name.equals("No_serving"))
{
	this.Set_time_needed_for_eating();
	this.another_plate = true;
	this.plate_number ++;
}
// Decided not to go for another plate
else
{
	//this.plate_number ++;
	this.another_plate = false;
}

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1705485662615</Id>
					<Name><![CDATA[record_stats]]></Name>
					<X>420</X><Y>480</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/// keeping tracks of decision type
///////////////////////////////////////////
/*if (this.decision_ps.equals("Basic_choice")) { get_Main().Num_basic ++;
} else if (this.decision_ps.equals("Satisfaction")) { get_Main().Num_satisfaction ++;
} else if (this.decision_ps.equals("Dissonances")) { get_Main().Num_dissonance ++;
} else if (this.decision_ps.equals("Experiential")) { get_Main().Num_experiential ++;
} else if (this.decision_ps.equals("Exp_Random")) { get_Main().Num_Exp_Rnd ++;
} else if (this.decision_ps.equals("Exp_only_one_to_choose_from")) { get_Main().Num_Exp_OOCF ++;
} else if (this.decision_ps.equals("increased_at_serving_time")) { get_Main().Num_IAST ++;
} else if (this.decision_ps.equals("decreased_at_serving_time")) { get_Main().Num_DAST ++;
} else if (this.decision_ps.equals("time_constrained")) { get_Main().Num_TC ++;
} else if (this.decision_ps.equals("Plate_Size_Constrained")) { get_Main().Num_PSC ++;
}*/
/// keeping tracks of serving size
///////////////////////////////////////////
/// Records of the 1st plate
if (this.plate_number == 1) {
	if(this.chosen_ps.name.equals("No_serving")){get_Main().Num_A_1st_Plate ++;
	}else if(this.chosen_ps.name.equals("Small_serving")){get_Main().Num_B_1st_Plate ++;
	}else if(this.chosen_ps.name.equals("Normal_serving")){get_Main().Num_C_1st_Plate ++;
	}else if(this.chosen_ps.name.equals("Large_serving")){get_Main().Num_D_1st_Plate ++;
	}
}
else
/// Records of the extra plates
{
	if(this.chosen_ps.name.equals("No_serving")){get_Main().Num_A_Extra_Plates ++;
	}else if(this.chosen_ps.name.equals("Small_serving")){get_Main().Num_B_Extra_Plates ++;
	}else if(this.chosen_ps.name.equals("Normal_serving")){get_Main().Num_C_Extra_Plates ++;
	}else if(this.chosen_ps.name.equals("Large_serving")){get_Main().Num_D_Extra_Plates ++;
	}
}

// keeping tracks of leftovers
///////////////////////////////////////////
/// Records of the 1st plate
if (this.plate_number == 1) {
	/// no decision made, lack of time to finish food
	if(this.Lack_of_Time == true){get_Main().Num_lack_time_1st_Plt ++;}
	/// Decision on the basis of hunger and fullness
	if(this.decision_lf1 == "finish"){get_Main().Num_finish_1_1st_Plt ++;
	}else if(this.decision_lf1 == "leave"){get_Main().Num_leave_1_1st_Plt ++;
	}
	/// Decision on the basis of conformism and sustanability
	if(this.decision_lf2 == "finish"){get_Main().Num_finish_2_1st_Plt ++;
	}else if(this.decision_lf2 == "leave"){get_Main().Num_leave_2_1st_Plt ++;
	}
}else
/// Records of the extra plates
{
	/// no decision made, lack of time to finish food
	if(this.Lack_of_Time == true){get_Main().Num_lack_time_Ext_Plt ++;}
	/// Decision on the basis of hunger and fullness
	if(this.decision_lf1 == "finish"){get_Main().Num_finish_1_Ext_Plt ++;
	}else if(this.decision_lf1 == "leave"){get_Main().Num_leave_1_Ext_Plt ++;
	}
	/// Decision on the basis of conformism and sustanability
	if(this.decision_lf2 == "finish"){get_Main().Num_finish_2_Ext_Plt ++;
	}else if(this.decision_lf2 == "leave"){get_Main().Num_leave_2_Ext_Plt ++;
	}
}

/// keeping tracks of numbers of platesdecision type
///////////////////////////////////////////
if (this.plate_number == 1) { get_Main().Num_oneplates ++;
} else if (this.plate_number == 2) { get_Main().Num_twoplates ++;
} else if (this.plate_number == 3) { get_Main().Num_threeplates ++;
} else if (this.plate_number == 4) { get_Main().Num_fourplates ++;
} else if (this.plate_number == 5) { get_Main().Num_fiveplates ++;
} else if (this.plate_number == 6) { get_Main().Num_sixplates ++;
} else if (this.plate_number == 7) { get_Main().Num_sevenplates ++;
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1705491052789</Id>
					<Name><![CDATA[record_leftovers]]></Name>
					<X>420</X><Y>500</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if (this.Business_person == true) 
{ 
	get_Main().LeftOvers_disliked_business.add(this.left_over_from_disliked_food);
	get_Main().LeftOvers_liked_business.add(this.left_over_from_liked_food);
	get_Main().LeftOvers_total_business.add(this.left_over_from_liked_food + this.left_over_from_disliked_food);
} 
else 
{ 
	get_Main().LeftOvers_disliked_nonbusiness.add(this.left_over_from_disliked_food);
	get_Main().LeftOvers_liked_nonbusiness.add(this.left_over_from_liked_food);
	get_Main().LeftOvers_total_nonbusiness.add(this.left_over_from_liked_food + this.left_over_from_disliked_food);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708006181221</Id>
					<Name><![CDATA[initialize_choices_lf]]></Name>
					<X>170</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/// choice A, finish plate
choice A = get_Main().add_choices();
A.name = "finish";

//// choice B, leave food
choice B = get_Main().add_choices();
B.name = "leave";

// calculate satisfactions for each choice and each motive
for(motive m: this.Motives)
{
	/// being thing and indulgence are ignore for this decision
	if(!m.name.equals("bec_thin") && !m.name.equals("indulgence") )
	{
	 	/// satisfactions of choice A, finish plate
		double satisfaction_ca = 0;
		if(m.type == social) { satisfaction_ca = 0;}
		else{
			double ave = selectFrom(choices_fl_fin_satisfaction).where(choices_fl_fin_satisfaction.name.eq(m.name)).firstResult(choices_fl_fin_satisfaction.mean);
			double sd = selectFrom(choices_fl_fin_satisfaction).where(choices_fl_fin_satisfaction.name.eq(m.name)).firstResult(choices_fl_fin_satisfaction.sd);
			satisfaction_ca = get_Main().normal(-1, 1, ave, sd);
		}
		A.satisfactions.put(m.name, satisfaction_ca);
	
		/// satisfactions of choice B, leave food
		double satisfaction_cb = 0;
		if(m.type == social) { satisfaction_cb = 0;}
		else{
			double ave = selectFrom(choices_fl_lea_satisfaction).where(choices_fl_lea_satisfaction.name.eq(m.name)).firstResult(choices_fl_lea_satisfaction.mean);
			double sd = selectFrom(choices_fl_lea_satisfaction).where(choices_fl_lea_satisfaction.name.eq(m.name)).firstResult(choices_fl_lea_satisfaction.sd);
			satisfaction_cb = get_Main().normal(-1, 1, ave, sd);
		}
		B.satisfactions.put(m.name, satisfaction_cb);
	}
}
this.Choices_lf.add(A);
this.Choices_lf.add(B);
/*traceln ("ID: " + this.Id + " " + this.Choices.get(0).name + 
		 ", Sat motive 1: " + this.Choices.get(0).satisfactions.get("motive1") + ", Imp motive 1: " + this.Motives.get(0).importance + 
		 ", Sat motive 2: " + this.Choices.get(0).satisfactions.get("motive2") + ", Imp motive 2: " + this.Motives.get(1).importance +
		 ", Sat motive 3: " + this.Choices.get(0).satisfactions.get("motive3") + ", Imp motive 3: " + this.Motives.get(2).importance);
traceln ("ID: " + this.Id + " " + this.Choices.get(1).name + 
		 ", Sat motive 1: " + this.Choices.get(1).satisfactions.get("motive1") + ", Imp motive 1: " + this.Motives.get(0).importance +
		 ", Sat motive 2: " + this.Choices.get(1).satisfactions.get("motive2") + ", Imp motive 2: " + this.Motives.get(1).importance +
		 ", Sat motive 3: " + this.Choices.get(1).satisfactions.get("motive3") + ", Imp motive 3: " + this.Motives.get(2).importance);
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708007162642</Id>
					<Name><![CDATA[get_mean_hunger]]></Name>
					<X>220</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[hunger]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[portion_size]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[double mean = 0;
//Agent is very hungry
if(hunger > 0.75) 
{ 
	if(portion_size.equals("No_serving")) { mean = -0.75;}
	if(portion_size.equals("Small_serving")) { mean = -0.25;}
	if(portion_size.equals("Normal_serving")) { mean = 0.25;}
	if(portion_size.equals("Large_serving")) { mean = 0.75;}
}
//Agent is hungry
else if(hunger <= 0.75 && hunger > 0.5) 
{ 
	if(portion_size.equals("No_serving")) { mean = -0.75;}
	if(portion_size.equals("Small_serving")) { mean = 0.00;}
	if(portion_size.equals("Normal_serving")) { mean = 0.75;}
	if(portion_size.equals("Large_serving")) { mean = 0.00;}
}
//Agent is little hungry
else if(hunger <= 0.5 && hunger > 0.25) 
{ 
	if(portion_size.equals("No_serving")) { mean = 0.00;}
	if(portion_size.equals("Small_serving")) { mean = 0.75;}
	if(portion_size.equals("Normal_serving")) { mean = 0.00;}
	if(portion_size.equals("Large_serving")) { mean = -0.75;}
}
//Agent is no hungry
else if(hunger <= 0.25) 
{ 
	if(portion_size.equals("No_serving")) { mean = 0.75;}
	if(portion_size.equals("Small_serving")) { mean = 0.25;}
	if(portion_size.equals("Normal_serving")) { mean = -0.25;}
	if(portion_size.equals("Large_serving")) { mean = -0.75;}
}
return mean;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708008735052</Id>
					<Name><![CDATA[get_mean_fullness]]></Name>
					<X>350</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[fullness]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[portion_size]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[double mean = 0;
//Agent is very full
if(fullness > 0.75) 
{ 
	if(portion_size.equals("No_serving")) { mean = 0.75;}
	if(portion_size.equals("Small_serving")) { mean = 0.25;}
	if(portion_size.equals("Normal_serving")) { mean = -0.25;}
	if(portion_size.equals("Large_serving")) { mean = -0.75;}
}
//Agent is full
else if(fullness <= 0.75 && fullness > 0.5) 
{ 
	if(portion_size.equals("No_serving")) { mean = 0.00;}
	if(portion_size.equals("Small_serving")) { mean = 0.75;}
	if(portion_size.equals("Normal_serving")) { mean = 0.00;}
	if(portion_size.equals("Large_serving")) { mean = -0.75;}
}
//Agent is little full
else if(fullness <= 0.5 && fullness > 0.25) 
{ 
	if(portion_size.equals("No_serving")) { mean = -0.75;}
	if(portion_size.equals("Small_serving")) { mean = 0.00;}
	if(portion_size.equals("Normal_serving")) { mean = 0.75;}
	if(portion_size.equals("Large_serving")) { mean = 0.00;}
}
//Agent is no full
else if(fullness <= 0.25) 
{ 
	if(portion_size.equals("No_serving")) { mean = -0.75;}
	if(portion_size.equals("Small_serving")) { mean = -0.25;}
	if(portion_size.equals("Normal_serving")) { mean = 0.25;}
	if(portion_size.equals("Large_serving")) { mean = 0.75;}
}
return mean;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1708074309555</Id>
					<Name><![CDATA[make_a_choice_lf1]]></Name>
					<Description><![CDATA[default value of basic choice is false]]></Description>
					<X>300</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[basic_choice]]></Name>
						<Type><![CDATA[boolean]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[true_decision]]></Name>
						<Type><![CDATA[boolean]]></Type>
					</Parameter>
					<Body><![CDATA[// get all values for calculation of choice
List<Double> all_total_satisfaction = new ArrayList<Double>();
List<Double> all_dissonance_strength = new ArrayList<Double>();
List<Double> all_dissonance_status = new ArrayList<Double>();
List<Double> all_experiential_satisfaction = new ArrayList<Double>();
double max_total_satisfaction = Double.NEGATIVE_INFINITY;
double min_total_dissonance_status = Double.POSITIVE_INFINITY;
double max_experiential_satisfaction = Double.NEGATIVE_INFINITY;
        
/// create a new list of motives
List<motive> tempMotiveList = new LinkedList();

/// select motives relevant for LEFT FOOD
/// If basic choice, remove social motives, otherwise keep all motives
if (basic_choice) 
{ 
	/// this decision has no social motive, so everything stays the same!!
	tempMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("hunger")));
	tempMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("fullness")));
	
}
else { 
	tempMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("hunger")));
	tempMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("fullness")));
}

/// create a list of experiential motives
List<motive> tempExpMotiveList = new LinkedList();
tempExpMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("hunger")));
tempExpMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("fullness")));

// create a list of the two highest experiential motives satisfactions
LinkedList<String> Exp_choice_List = new LinkedList<>();


//// loop through choices
String chosen_1 = "";
String chosen_2 = "";
String chosen_3 = "";
for(choice c : this.Choices_lf)
{
	//traceln ("ID: " + this.Id + " " + c.name);
	String name = c.name;
	/// calculate indexes per choice by going through all motives
	double temp_total_satisfaction = c.calculate_total_satisfaction(tempMotiveList);
	double[] result = c.calculate_dissonance_strength(tempMotiveList, dissonance_tolerance);
	double temp_dissonance_strength = result[0];
	double temp_dissonance_status = result[1];
	StatisticsDiscrete temp_experiential_satisfaction = new StatisticsDiscrete();
	if(tempExpMotiveList != null) { for(motive m : tempExpMotiveList) { temp_experiential_satisfaction.add( (c.satisfactions.get(m.name) * m.importance) ); } }
	
	/// collect indexes per choice A or B
	all_total_satisfaction.add(temp_total_satisfaction);
    all_dissonance_strength.add(temp_dissonance_strength);
    all_dissonance_status.add(temp_dissonance_status);
    all_experiential_satisfaction.add(temp_experiential_satisfaction.mean());
    
    // choose choice according to satisfaction, option 1
    if (temp_total_satisfaction > max_total_satisfaction)
    {
    	chosen_1 = c.name;
        max_total_satisfaction = temp_total_satisfaction;
        //traceln("temp_total_satisfaction > max_total_satisfaction == TRUE");
    }
    // choose choice according to dissnance, option 2
    if (temp_dissonance_status < min_total_dissonance_status)
    {
    	chosen_2 = c.name;
        min_total_dissonance_status = temp_dissonance_status;
        //traceln("temp_dissonance_status < min_total_dissonance_status == TRUE");
    }
    // choose choice according to experiential satisfaction, option 3
    if (temp_experiential_satisfaction.mean() > max_experiential_satisfaction)
    {
    	chosen_3 = c.name;
        max_experiential_satisfaction = temp_experiential_satisfaction.mean();
        if (Exp_choice_List.size() == 2) { Exp_choice_List.removeFirst(); }
        Exp_choice_List.add(c.name);
        //traceln("temp_experiential_satisfaction.mean() > max_experiential_satisfaction == TRUE");
    }    
}
//traceln ("ID: " + this.Id + " " +", chosen1: " + chosen_1 + ", chosen2: " + chosen_2 + ", chosen3: " + chosen_3);

// option 3 = habit, nothing changes
String result = "";
if (basic_choice && !true_decision) 
{ 
	String name = chosen_1;
	this.chosen_lf = findAll(this.Choices_lf, c -> c.name.equals(name)).get(0);
    result = "Basic_choice";
}
// Checks if one choice gives 10% more satisfaction than the other
else if(further_comparison_needed(2, all_total_satisfaction,"descending") != true)
{
	String name = chosen_1;
	this.chosen_lf = findAll(this.Choices_lf, c -> c.name.equals(name)).get(0);
    result = "Satisfaction";
}
// If both satisfactions are similar (within 10% range), check dissonances
else if(further_comparison_needed(1, all_dissonance_status,"ascending") != true)
{
	String name = chosen_2;
	this.chosen_lf = findAll(this.Choices_lf, c -> c.name.equals(name)).get(0);
    result = "Dissonances";
}
// If dissonances are similar (within 10%), check experiential satisfaction
else if(further_comparison_needed(2, all_experiential_satisfaction,"descending") != true)
{
	String name = chosen_3;
	this.chosen_lf = findAll(this.Choices_lf, c -> c.name.equals(name)).get(0);
    result = "Experiential";
}
// if experiental satisfactions are similar (wihtin 10% range) go with habit
// no random because randomizer in netlogo works different from python
else 
{
	/// selects at random one of the two most satisfactions, based on experience
	if(Exp_choice_List.size() > 1)
	{
		int randomIndex = 0;
		if(uniform() < 0.5){ randomIndex = 1;}
		String name = Exp_choice_List.get(randomIndex);
		this.chosen_lf = findAll(this.Choices_lf, c -> c.name.equals(name)).get(0);
		result = "Exp_Random";
	}
	else
	{
		String name = Exp_choice_List.get(0);
		this.chosen_lf = findAll(this.Choices_lf, c -> c.name.equals(name)).get(0);
		result = "Exp_only_one_to_choose_from";
	}
}

//traceln("result: " + result + ", " + this.chosen.name);
//traceln();
return result;

    ]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[String]]></ReturnType>
					<Id>1708074760845</Id>
					<Name><![CDATA[make_a_choice_lf2]]></Name>
					<Description><![CDATA[default value of basic choice is false]]></Description>
					<X>300</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[basic_choice]]></Name>
						<Type><![CDATA[boolean]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[true_decision]]></Name>
						<Type><![CDATA[boolean]]></Type>
					</Parameter>
					<Body><![CDATA[// get all values for calculation of choice
List<Double> all_total_satisfaction = new ArrayList<Double>();
List<Double> all_dissonance_strength = new ArrayList<Double>();
List<Double> all_dissonance_status = new ArrayList<Double>();
List<Double> all_experiential_satisfaction = new ArrayList<Double>();
double max_total_satisfaction = Double.NEGATIVE_INFINITY;
double min_total_dissonance_status = Double.POSITIVE_INFINITY;
double max_experiential_satisfaction = Double.NEGATIVE_INFINITY;
        
/// create a new list of motives
List<motive> tempMotiveList = new LinkedList();

/// select motives relevant for LEFT FOOD
/// If basic choice, remove social motives, otherwise keep all motives
if (basic_choice) 
{ 
	tempMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("sustainability")));
	
}
else { 
	tempMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("conformism")));
	tempMotiveList.addAll(findAll(this.Motives, m -> m.name.equals("sustainability")));
}

/// create a list of experiential motives
List<motive> tempExpMotiveList = new LinkedList();
// create a list of the two highest experiential motives satisfactions
LinkedList<String> Exp_choice_List = new LinkedList<>();


//// loop through choices
String chosen_1 = "";
String chosen_2 = "";
String chosen_3 = "";
for(choice c : this.Choices_lf)
{
	//traceln ("ID: " + this.Id + " " + c.name);
	String name = c.name;
	/// calculate indexes per choice by going through all motives
	double temp_total_satisfaction = c.calculate_total_satisfaction(tempMotiveList);
	double[] result = c.calculate_dissonance_strength(tempMotiveList, dissonance_tolerance);
	double temp_dissonance_strength = result[0];
	double temp_dissonance_status = result[1];
	StatisticsDiscrete temp_experiential_satisfaction = new StatisticsDiscrete();
	if(tempExpMotiveList != null) { for(motive m : tempExpMotiveList) { temp_experiential_satisfaction.add( (c.satisfactions.get(m.name) * m.importance) ); } }
	
	/// collect indexes per choice A or B
	all_total_satisfaction.add(temp_total_satisfaction);
    all_dissonance_strength.add(temp_dissonance_strength);
    all_dissonance_status.add(temp_dissonance_status);
    all_experiential_satisfaction.add(temp_experiential_satisfaction.mean());
    
    // choose choice according to satisfaction, option 1
    if (temp_total_satisfaction > max_total_satisfaction)
    {
    	chosen_1 = c.name;
        max_total_satisfaction = temp_total_satisfaction;
        //traceln("temp_total_satisfaction > max_total_satisfaction == TRUE");
    }
    // choose choice according to dissnance, option 2
    if (temp_dissonance_status < min_total_dissonance_status)
    {
    	chosen_2 = c.name;
        min_total_dissonance_status = temp_dissonance_status;
        //traceln("temp_dissonance_status < min_total_dissonance_status == TRUE");
    }
    // choose choice according to experiential satisfaction, option 3
    if (temp_experiential_satisfaction.mean() > max_experiential_satisfaction)
    {
    	chosen_3 = c.name;
        max_experiential_satisfaction = temp_experiential_satisfaction.mean();
        if (Exp_choice_List.size() == 2) { Exp_choice_List.removeFirst(); }
        Exp_choice_List.add(c.name);
        //traceln("temp_experiential_satisfaction.mean() > max_experiential_satisfaction == TRUE");
    }    
}
//traceln ("ID: " + this.Id + " " +", chosen1: " + chosen_1 + ", chosen2: " + chosen_2 + ", chosen3: " + chosen_3);

// option 3 = habit, nothing changes
String result = "";
if (basic_choice && !true_decision)
{ 
	String name = chosen_1;
	this.chosen_lf = findAll(this.Choices_lf, c -> c.name.equals(name)).get(0);
    result = "Basic_choice";
}
// Checks if one choice gives 10% more satisfaction than the other
else if(further_comparison_needed(2, all_total_satisfaction,"descending") != true)
{
	String name = chosen_1;
	this.chosen_lf = findAll(this.Choices_lf, c -> c.name.equals(name)).get(0);
    result = "Satisfaction";
}
// If both satisfactions are similar (within 10% range), check dissonances
else if(further_comparison_needed(1, all_dissonance_status,"ascending") != true)
{
	String name = chosen_2;
	this.chosen_lf = findAll(this.Choices_lf, c -> c.name.equals(name)).get(0);
    result = "Dissonances";
}
// If dissonances are similar (within 10%), check experiential satisfaction
// there are NO experiential motives in this decision so if this point is reached without a decision being made
// choose at random
else 
{
	String Name = "finish";
	if(uniform() < 0.5){ Name = "leave";}
	/// final is needed to work with the findAll function
	final String name = Name;
	this.chosen_lf = findAll(this.Choices_lf, c -> c.name.equals(name)).get(0);
	result = "Exp_Random";
}
//traceln("result: " + result + ", " + this.chosen.name);
//traceln();
return result;

    ]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708075355130</Id>
					<Name><![CDATA[set_guess_type]]></Name>
					<X>170</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/// set businnes person
if(uniform() < get_Main().Business_proportion)
{
	this.Business_person = true;
	get_Main().Num_business_agents ++;
}
else
{ 
	get_Main().Num_non_business_agents ++;
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708075388073</Id>
					<Name><![CDATA[set_gender]]></Name>
					<X>170</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[//set gender
if(uniform() < get_Main().Female_proportion)
{
	this.Gender = Female;
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708075412050</Id>
					<Name><![CDATA[set_self_control]]></Name>
					<X>170</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[this.self_control = get_Main().normal(0, 1, 0.75, 0.15);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708075434635</Id>
					<Name><![CDATA[set_choosing_ability]]></Name>
					<X>170</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if (this.Business_person == true)
{
	this.choosing_ability = get_Main().normal(0, 1, 0.75, 0.15);
}
else
{
	this.choosing_ability = get_Main().normal(0, 1, 0.5, 0.15);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708075464332</Id>
					<Name><![CDATA[set_dissonance_tolerance]]></Name>
					<X>170</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[this.dissonance_tolerance = get_Main().normal(0, 1, 0.5, 0.14);]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708089021540</Id>
					<Name><![CDATA[set_identity_weight]]></Name>
					<X>600</X><Y>350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[alter]]></Name>
						<Type><![CDATA[Person]]></Type>
					</Parameter>
					<Body><![CDATA[double id_w = 1;
if(this.Business_person == alter.Business_person && this.Gender == alter.Gender) {id_w = 1.0;}
else if(this.Business_person == alter.Business_person && this.Gender != alter.Gender) {id_w = 0.5;}
else if(this.Business_person != alter.Business_person && this.Gender == alter.Gender) {id_w = 0.5;}
else if(this.Business_person != alter.Business_person && this.Gender != alter.Gender) {id_w = 0.1;}
return id_w;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708090923917</Id>
					<Name><![CDATA[decide_on_the_basis_of_time]]></Name>
					<X>240</X><Y>390</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// If the agent is a bussiness man, with high self-control and less than 20 min to eat
if(this.Business_person == true && this.Time_count > 100 && this.self_control > 0.75)
{
	//traceln();
	//traceln("Agent: " + this.Id + ", Serving number: " + this.plate_number + ", " + this.chosen_ps.name + ", " + this.decision_ps + " Time: " + this.Time_count);
	if(this.chosen_ps.name.equals("Large_serving") && this.Time_count > 100)
	{
		this.chosen_ps = findAll(this.Choices_ps, c -> c.name.equals("Normal_serving")).get(0);
		this.decision_ps =  "time_constrained";
	}
	if(this.chosen_ps.name.equals("Normal_serving") && this.Time_count > 105)
	{
		this.chosen_ps = findAll(this.Choices_ps, c -> c.name.equals("Small_serving")).get(0);
		this.decision_ps =  "time_constrained";
	}
	if(this.chosen_ps.name.equals("Small_serving") && this.Time_count > 110)
	{
		this.chosen_ps = findAll(this.Choices_ps, c -> c.name.equals("No_serving")).get(0);
		this.decision_ps =  "time_constrained";
	}
	//traceln("Agent: " + this.Id + ", Serving number: " + this.plate_number + ", " + this.chosen_ps.name + ", " + this.decision_ps + " Time: " + this.Time_count);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708092191456</Id>
					<Name><![CDATA[decide_at_serving_time]]></Name>
					<X>240</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// If the agent is a bussiness man, with high self-control and less than 20 min to eat
if(this.self_control < 0.5)
{
	motive BTH = findAll(this.Motives, m -> m.name.equals("bec_thin")).get(0);
	motive IND = findAll(this.Motives, m -> m.name.equals("indulgence")).get(0);
	//traceln();
	//traceln("Agent: " + this.Id + ", Serving number: " + this.plate_number + ", " + this.chosen_ps.name + ", BTH: " + BTH.importance + ", IND: " + IND.importance + " Time: " + this.Time_count);
	/// both are important
	if(BTH.importance > 0.7 && IND.importance > 0.7)
	{
		//random choice
		if(uniform() < 0.5)
		{
			//decrease portion size
			this.change_portion_size("decrease");
		}
		else
		{
			//increase portion size
			this.change_portion_size("increase");
		}
	}
	/// being thin more important
	if(BTH.importance > 0.7 && IND.importance <= 0.7)
	{
		///decreases portion size
		this.change_portion_size("decrease");
	}
	/// indulgence more important
	if(BTH.importance <= 0.7 && IND.importance > 0.7)
	{
		// increase portion size
		this.change_portion_size("increase");
	}
	/// both low
	if(BTH.importance <= 0.7 && IND.importance <= 0.7)
	{
		// nothing happens
	}
	//traceln("Agent: " + this.Id + ", Serving number: " + this.plate_number + ", " + this.chosen_ps.name + ", " + this.decision_ps + " Time: " + this.Time_count);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708095362306</Id>
					<Name><![CDATA[change_portion_size]]></Name>
					<X>390</X><Y>410</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[change]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[if(change.equals("increase"))
{
	if(this.chosen_ps.name.equals("Normal_serving")) { this.chosen_ps = findAll(this.Choices_ps, c -> c.name.equals("Large_serving")).get(0); }
	else if(this.chosen_ps.name.equals("Small_serving")) { this.chosen_ps = findAll(this.Choices_ps, c -> c.name.equals("Normal_serving")).get(0); }
	else if(this.chosen_ps.name.equals("No_serving")) { this.chosen_ps = findAll(this.Choices_ps, c -> c.name.equals("Small_serving")).get(0); }
	this.decision_ps = "increased_at_serving_time";
}
else if(change.equals("decrease"))
{
	if(this.chosen_ps.name.equals("Large_serving")) { this.chosen_ps = findAll(this.Choices_ps, c -> c.name.equals("Normal_serving")).get(0); }
	else if(this.chosen_ps.name.equals("Normal_serving")) { this.chosen_ps = findAll(this.Choices_ps, c -> c.name.equals("Small_serving")).get(0); }
	else if(this.chosen_ps.name.equals("Small_serving")) { this.chosen_ps = findAll(this.Choices_ps, c -> c.name.equals("No_serving")).get(0); }
	this.decision_ps = "decreased_at_serving_time";
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708096412720</Id>
					<Name><![CDATA[Plate_size_constrained]]></Name>
					<X>240</X><Y>430</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[if(get_Main().Small_plate == true)
{
	if(this.chosen_ps.name.equals("Large_serving")) 
	{ 
		this.chosen_ps = findAll(this.Choices_ps, c -> c.name.equals("Normal_serving")).get(0); 
		this.decision_ps = "Plate_Size_Constrained";
	}
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708325324430</Id>
					<Name><![CDATA[Set_time_needed_for_eating]]></Name>
					<X>80</X><Y>440</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/// set time spent at eating
if(this.chosen_ps.name.equals("Large_serving")) 
{ 
	this.Time_needed_for_eating = (int) get_Main().triangular(18, 22, 20);
}
else if(this.chosen_ps.name.equals("Normal_serving")) 
{ 
	this.Time_needed_for_eating = (int) get_Main().triangular(13, 18, 15); 
}
else if(this.chosen_ps.name.equals("Small_serving")) 
{ 
	this.Time_needed_for_eating = (int) get_Main().triangular(8, 13, 10); 
}
else if(this.chosen_ps.name.equals("No_serving")) 
{ 
	this.Time_needed_for_eating = 0; 
}
else{traceln("Something wrong, check set_eating_time function");}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708336542117</Id>
					<Name><![CDATA[leftover_Disliked_Food]]></Name>
					<X>260</X><Y>490</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[double food_gr_served = 0;
if(this.chosen_ps.name.equals("Large_serving")) { food_gr_served = 400; }
if(this.chosen_ps.name.equals("Normal_serving")) { food_gr_served = 300; }
if(this.chosen_ps.name.equals("Small_serving")) { food_gr_served = 200; }

// FOOD DIVERSITY LOW && ABILITY TO CHOOSE WHAT YOU LIKE LOW
if(get_Main().Food_Diversity < 0.3 && this.choosing_ability < 0.3)
{
	// left over big percentage of served food
	this.left_over_from_disliked_food = food_gr_served * get_Main().left_food_percentage * 2 ;
	//traceln("Agent: " + this.Id + ", Serving number: " + this.plate_number + ", " + this.chosen_ps.name + ", Disliked food: " + this.left_over_from_disliked_food + ", CA: " + this.choosing_ability + ", Time: " + this.Time_count);
}
// FOOD DIVERSITY HIGH && ABILITY TO CHOOSE WHAT YOU LIKE LOW
if(get_Main().Food_Diversity > 0.7 && this.choosing_ability < 0.3)
{
	// left over big percentage of served food
	this.left_over_from_disliked_food = food_gr_served * get_Main().left_food_percentage * 2 ;
	//traceln("Agent: " + this.Id + ", Serving number: " + this.plate_number + ", " + this.chosen_ps.name + ", Disliked food: " + this.left_over_from_disliked_food + ", CA: " + this.choosing_ability + ", Time: " + this.Time_count);
}
// FOOD DIVERSITY LOW && ABILITY TO CHOOSE WHAT YOU LIKE HIGH
if(get_Main().Food_Diversity < 0.3 && this.choosing_ability > 0.7)
{
	// left over small percentage of served food
	this.left_over_from_disliked_food = food_gr_served * get_Main().left_food_percentage ;
	//traceln("Agent: " + this.Id + ", Serving number: " + this.plate_number + ", " + this.chosen_ps.name + ", Disliked food: " + this.left_over_from_disliked_food + ", CA: " + this.choosing_ability + ", Time: " + this.Time_count);
}
// FOOD DIVERSITY HIGH && ABILITY TO CHOOSE WHAT YOU LIKE HIGH
if(get_Main().Food_Diversity > 0.7 && this.choosing_ability > 0.7)
{
	// nothing happens
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708338023958</Id>
					<Name><![CDATA[leftover_from_limited_time]]></Name>
					<X>260</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/// we assume agents eat 20 grs of food per minute
/// so a small portion (~200gr) is eaten in 10 min
/// a normall portion (~300gr) is eaten in 15 min
/// a large portion (~400gr) is eaten in 20 min
int minutes_left = this.Time_needed_for_eating - this.Time_spent_eating;
double current_left_over = minutes_left * 20;
// if what was left over from disliked food is lower than this amount, increase left overs
if(this.left_over_from_disliked_food < current_left_over)
{
	this.left_over_from_liked_food = current_left_over - this.left_over_from_disliked_food;	
	//traceln("Agent: " + this.Id + ", Serving number: " + this.plate_number + ", " + this.chosen_ps.name + ", Disliked food: " + this.left_over_from_disliked_food + ", CLO: " + current_left_over + ", LO liked food: " + this.left_over_from_liked_food + ", Time: " + this.Time_count);
}
// if what was left over from disliked food is higher than this amount, no update]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708344399644</Id>
					<Name><![CDATA[Update_hunger_fullness]]></Name>
					<X>280</X><Y>550</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/// calculate amount of food served
double food_gr_served = 0;
if(this.chosen_ps.name.equals("Large_serving")) { food_gr_served = 400; }
if(this.chosen_ps.name.equals("Normal_serving")) { food_gr_served = 300; }
if(this.chosen_ps.name.equals("Small_serving")) { food_gr_served = 200; }

/// calculate amount of food eaten by substracting the leftovers up to now
double food_eaten = food_gr_served - this.left_over_from_disliked_food - this.left_over_from_liked_food;

/// calculate the time taken to eat that food
/// we take that agents eat 20gr per minute
double min_spent_eating = food_eaten / 20;

/////////////// calculate the decrease in hunger
// the decrease is calculated as (minutes_eating / 30), so that 30 minutes == 1
double decrease = min_spent_eating / 30;
motive hungerMotive = findAll(this.Motives, m -> m.name.equals("hunger")).get(0);
/// calculate new hunger value
double new_hunger = hungerMotive.importance - decrease;
/// if value is above 0.001, set new value
if (new_hunger > 0.001) { 
    hungerMotive.importance = new_hunger;
}
/// if value is below 0.001, set hunger to 0.001
if (new_hunger <= 0.001) { 
    hungerMotive.importance = 0.001;
}

/////////////// calculate increase in fullness
// the increase is calculated as (minutes_eating / 30), so that 30 minutes == 1
/// first control for the first plate, if so, the first 15 min are not taken into account
if(this.Total_time_spent_eating - 15 > 0)
{
	/// this adjust for previous time spent eating
	/// if total time spent eating minus 15 is lower than the time spent eating this round,
	/// then it is the first time that is eating for longer than 15 min but not longer than the time spent eating this round
	/// if total time spent eating minus 15 is higher than the time spent eating this round,
	/// then only account for the actual time spent eating cause the other minutes were accounted in the previous round
	motive fullnessMotive = findAll(this.Motives, m -> m.name.equals("fullness")).get(0);
	//traceln();
	//traceln("Agent: " + this.Id + ", Serving number: " + this.plate_number + ", " + this.chosen_ps.name + ", TTSE: " + this.Total_time_spent_eating + ", MSE: " + min_spent_eating + ", fullness: " + fullnessMotive.importance + ", Time: " + this.Time_count);
	if(this.Total_time_spent_eating - 15 < min_spent_eating)
	{
		min_spent_eating = this.Total_time_spent_eating - 15;
	}
	double increase = min_spent_eating / 30;
	/// calculate new hunger value
	double new_fullness = fullnessMotive.importance + increase;
	/// if value is above 0.001, set new value
	if (new_fullness < 1) { 
	   	fullnessMotive.importance = new_fullness;
	}
	/// if value is below 0.001, set hunger to 0.001
	if (new_fullness >= 1) { 
	    fullnessMotive.importance = 1;
	}
	//traceln("Agent: " + this.Id + ", Serving number: " + this.plate_number + ", " + this.chosen_ps.name + ", TTSE: " + this.Total_time_spent_eating + ", MSE: " + min_spent_eating + ", fullness: " + fullnessMotive.importance + ", Time: " + this.Time_count);
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708344889498</Id>
					<Name><![CDATA[decide_on_motivations_ps]]></Name>
					<X>240</X><Y>370</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[choice_type]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[// (Re)Initialize Alter Representations
this.initialize_alter_representations(choice_type);

// make choice on food portion based on motives
//if alters in social network, account for social motives
if(this.alters_representation != null & !this.alters_representation.isEmpty())
{
	// update the social motives
	this.update_social_motive_of_choices(social,"Food_Portion");
	// make a decision with social motives 
	this.decision_ps = this.make_a_choice_ps(false,true);
}
//if none in social network, discard social motives
else {this.decision_ps = this.make_a_choice_ps(true,true);}

]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708501724998</Id>
					<Name><![CDATA[update_hunger_fullness_satisfactions]]></Name>
					<X>240</X><Y>590</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// calculate satisfactions for each choice and each motive according to the current value of hunger and fullness
for(motive m: this.Motives)
{
	if(m.name.equals("hunger") || m.name.equals("fullness") )
	{
		///////////////////////////////////////////////////////
		/// satisfactions of choice A, no serving
		double satisfaction_ca = 0;
		choice A = findAll(this.Choices_ps, c -> c.name.equals("No_serving") ).get(0);
		if(m.name.equals("hunger"))
		{
			double ave = get_mean_hunger(m.importance, A.name);
			double sd = selectFrom(choices_ps_not_satisfaction).where(choices_ps_not_satisfaction.name.eq(m.name)).firstResult(choices_ps_not_satisfaction.sd);
			satisfaction_ca = get_Main().normal(-1, 1, ave, sd);
		}
		if(m.name.equals("fullness"))
		{
			double ave = get_mean_fullness(m.importance, A.name);
			double sd = selectFrom(choices_ps_not_satisfaction).where(choices_ps_not_satisfaction.name.eq(m.name)).firstResult(choices_ps_not_satisfaction.sd);
			satisfaction_ca = get_Main().normal(-1, 1, ave, sd);
		}
		A.satisfactions.put(m.name, satisfaction_ca);
	
		///////////////////////////////////////////////////////
		/// satisfactions of choice B, small plate
		double satisfaction_cb = 0;
		choice B = findAll(this.Choices_ps, c -> c.name.equals("Small_serving") ).get(0);
		if(m.name.equals("hunger"))
		{
			double ave = get_mean_hunger(m.importance, B.name);
			double sd = selectFrom(choices_ps_sm_satisfaction).where(choices_ps_sm_satisfaction.name.eq(m.name)).firstResult(choices_ps_sm_satisfaction.sd);
			satisfaction_cb = get_Main().normal(-1, 1, ave, sd);
		}
		if(m.name.equals("fullness"))
		{
			double ave = get_mean_fullness(m.importance, B.name);
			double sd = selectFrom(choices_ps_sm_satisfaction).where(choices_ps_sm_satisfaction.name.eq(m.name)).firstResult(choices_ps_sm_satisfaction.sd);
			satisfaction_cb = get_Main().normal(-1, 1, ave, sd);
		}
		B.satisfactions.put(m.name, satisfaction_cb);
	
		/////////////////////////////////////////////////////
		/// satisfactions of choice C, normal plate
		double satisfaction_cc = 0;
		choice C = findAll(this.Choices_ps, c -> c.name.equals("Normal_serving") ).get(0);
		if(m.name.equals("hunger"))
		{
			double ave = get_mean_hunger(m.importance, C.name);
			double sd = selectFrom(choices_ps_nor_satisfaction).where(choices_ps_nor_satisfaction.name.eq(m.name)).firstResult(choices_ps_nor_satisfaction.sd);
			satisfaction_cc = get_Main().normal(-1, 1, ave, sd);
		}
		if(m.name.equals("fullness"))
		{
			double ave = get_mean_fullness(m.importance, C.name);
			double sd = selectFrom(choices_ps_nor_satisfaction).where(choices_ps_nor_satisfaction.name.eq(m.name)).firstResult(choices_ps_nor_satisfaction.sd);
			satisfaction_cc = get_Main().normal(-1, 1, ave, sd);
		}
		C.satisfactions.put(m.name, satisfaction_cc);
	
		/////////////////////////////////////////////////////
		/// satisfactions of choice D, large plate
		double satisfaction_cd = 0;
		choice D = findAll(this.Choices_ps, c -> c.name.equals("Large_serving") ).get(0);
		if(m.name.equals("hunger"))
		{
			double ave = get_mean_hunger(m.importance, D.name);
			double sd = selectFrom(choices_ps_lar_satisfaction).where(choices_ps_lar_satisfaction.name.eq(m.name)).firstResult(choices_ps_lar_satisfaction.sd);
			satisfaction_cd = get_Main().normal(-1, 1, ave, sd);
		}
		if(m.name.equals("fullness"))
		{
			double ave = get_mean_fullness(m.importance, D.name);
			double sd = selectFrom(choices_ps_lar_satisfaction).where(choices_ps_lar_satisfaction.name.eq(m.name)).firstResult(choices_ps_lar_satisfaction.sd);
			satisfaction_cd = get_Main().normal(-1, 1, ave, sd);
		}
		D.satisfactions.put(m.name, satisfaction_cd);
	}
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708526443727</Id>
					<Name><![CDATA[leftover_from_liked_food]]></Name>
					<X>280</X><Y>570</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[///We assume it is leaving the whole food being served!!!

double food_gr_served = 0;
if(this.chosen_ps.name.equals("Large_serving")) { food_gr_served = 400; }
if(this.chosen_ps.name.equals("Normal_serving")) { food_gr_served = 300; }
if(this.chosen_ps.name.equals("Small_serving")) { food_gr_served = 200; }

if(this.left_over_from_disliked_food < food_gr_served)
{
	this.left_over_from_liked_food = food_gr_served - this.left_over_from_disliked_food;	
}
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708527979544</Id>
					<Name><![CDATA[food_portion_decision]]></Name>
					<X>210</X><Y>350</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// make serving decision on the basis of motivations
this.decide_on_motivations_ps("Food_Portion");

// make choice on food portion based on time
this.decide_on_the_basis_of_time();

// make choice at serving time
this.decide_at_serving_time();

// make choice on food portion based on motives
this.Plate_size_constrained();]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708528578490</Id>
					<Name><![CDATA[decide_on_motivations_lf]]></Name>
					<X>260</X><Y>530</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[// Update social context, check who is leaving or not food
this.initialize_alter_representations("Left_Food");

// make choice on food portion based on motives

//if alters in social network, account for social motives
if(this.alters_representation != null & !this.alters_representation.isEmpty())
{
	// update the social motives
	this.update_social_motive_of_choices(social,"Left_Food");
	// make a decision with social motives 
	this.decision_lf1 = this.make_a_choice_lf1(false,true);
}
//if none in social network, discard social motives
else {this.decision_lf1 = this.make_a_choice_lf1(true,true);;}


/// update hunger and fullness if plate was finished
if(this.chosen_lf.name.equals("finish"))
{ 
	this.Update_hunger_fullness(); 
	//update the first decision based on motives
	this.decision_lf1 = "finish";
}
	
// If food was not finish and NOT FULL
// Reconsider deicision on the basis of conformism and sustanability
else if(this.chosen_lf.name.equals("leave") && (findAll(this.Motives, m -> m.name.equals("fullness")).get(0).importance < 1.0) )
{
	//update the first decision, food was left on the basis of hunger and fullness
	this.decision_lf1 = "leave";
	//if alters in social network, account for social motives
	if(this.alters_representation != null & !this.alters_representation.isEmpty())
	{
		this.decision_ps = this.make_a_choice_lf2(false,true);
	}
	//if none in social network, discard social motives
	else {this.decision_ps = this.make_a_choice_lf2(true,true);}
	/// update hunger and fullness if plate was finished
	if(this.chosen_lf.name.equals("finish"))
	{ 
		//update the second decision. food was finished on basis of conformism and sustanibility
		this.decision_lf2 = "finish";
		this.Update_hunger_fullness(); 
	}
	/// if not finish update leftovers
	else
	{
		//update the second decision. food was left on basis of conformism and sustanibility
		this.decision_lf2 = "leave";
		this.leftover_from_liked_food();
	}
}
// If fULL update amount of leftovers
else
{
	//food was left because it was full, no reconsideration on the basis of conformism and sustanability
	this.decision_lf1 = "leave";
	//update leftovers
	this.leftover_from_liked_food();
}]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1708685687672</Id>
					<Name><![CDATA[reset_Imp_Sat_Hunger_Fullness]]></Name>
					<X>-230</X><Y>510</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/// reset hunger
motive hungerMotive = findAll(this.Motives, m -> m.name.equals("hunger")).get(0);
double ave_h = selectFrom(motives_table).where(motives_table.name.eq(hungerMotive.name)).uniqueResult(motives_table.average);
double sd_h = selectFrom(motives_table).where(motives_table.name.eq(hungerMotive.name)).uniqueResult(motives_table.sd);
double min_h = selectFrom(motives_table).where(motives_table.name.eq(hungerMotive.name)).uniqueResult(motives_table.low);
double max_h = selectFrom(motives_table).where(motives_table.name.eq(hungerMotive.name)).uniqueResult(motives_table.upp);
hungerMotive.importance = get_Main().normal(min_h, max_h, ave_h, sd_h);

/// reset fullness	
motive fullnessMotive = findAll(this.Motives, m -> m.name.equals("fullness")).get(0);
double ave_f = selectFrom(motives_table).where(motives_table.name.eq(fullnessMotive.name)).uniqueResult(motives_table.average);
double sd_f = selectFrom(motives_table).where(motives_table.name.eq(fullnessMotive.name)).uniqueResult(motives_table.sd);
double min_f = selectFrom(motives_table).where(motives_table.name.eq(fullnessMotive.name)).uniqueResult(motives_table.low);
double max_f = selectFrom(motives_table).where(motives_table.name.eq(fullnessMotive.name)).uniqueResult(motives_table.upp);
fullnessMotive.importance = get_Main().normal(min_f, max_f, ave_f, sd_f);

/// update satisfactions
this.update_hunger_fullness_satisfactions();
//traceln();
//traceln("Agent: " + this.Id + ", Importance hunger: " + hungerMotive.importance + ", " + "Fullness Importance: " + fullnessMotive.importance);
]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1711535428811</Id>
					<Name><![CDATA[record_breakfast_times]]></Name>
					<X>170</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[/// keeping tracks of breakfast time of first plate
///////////////////////////////////////////
if(this.Business_person == true){ get_Main().breakfast_time_business.add(this.Breakfast_time);
}else { get_Main().breakfast_time_non_business.add(this.Breakfast_time); 
}
]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1391002816802</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<StatechartReference>
						<PackageName><![CDATA[establishment_diner_model]]></PackageName>
						<ClassName><![CDATA[Person]]></ClassName>
						<ItemName><![CDATA[statechart]]></ItemName>
					</StatechartReference>
					<DrawLine>true</DrawLine>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-1396653888</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1391002820927</Id>
					<Name><![CDATA[main]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[establishment_diner_model]]></PackageName>
						<ClassName><![CDATA[Main]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1696324808941</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>ALWAYS_SHOW</LevelVisibility>

			<Presentation>
				<Oval>
					<Id>1169205484512</Id>
					<Name><![CDATA[oval]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>0</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>0</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<RadiusX>2</RadiusX>
					<RadiusY>2</RadiusY>
					<Rotation>0.0</Rotation>
					<FillColor>-16777216</FillColor>
					<FillMaterial>null</FillMaterial>
				</Oval>
				<Group>
					<Id>1700129668699</Id>
					<Name><![CDATA[person]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>-20</X><Y>20</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Curve ControlPoints="true">
					<Id>1700129668701</Id>
					<Name><![CDATA[shapeBody]]></Name>
					<X>-2</X><Y>-7</Y>
					<Label><X>-20</X><Y>28</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-16777216</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>4</Y><Z>0</Z></Point>
					   <Point><X>3</X><Y>2</Y><Z>0</Z></Point>
					   <Point><X>-1</X><Y>3</Y><Z>0</Z></Point>
					   <Point><X>-2</X><Y>3</Y><Z>0</Z></Point>
					   <Point><X>-2</X><Y>10</Y><Z>0</Z></Point>
					   <Point><X>-2</X><Y>11</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>11</Y><Z>0</Z></Point>
					   <Point><X>-1</X><Y>9</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>17</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>17</Y><Z>0</Z></Point>
					   <Point><X>3</X><Y>17</Y><Z>0</Z></Point>
					   <Point><X>4</X><Y>17</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>9</Y><Z>0</Z></Point>
					   <Point><X>4</X><Y>11</Y><Z>0</Z></Point>
					   <Point><X>6</X><Y>11</Y><Z>0</Z></Point>
					   <Point><X>6</X><Y>10</Y><Z>0</Z></Point>
					   <Point><X>6</X><Y>3</Y><Z>0</Z></Point>
					   <Point><X>5</X><Y>3</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>2</Y><Z>0</Z></Point>
					   <Point><X>4</X><Y>4</Y><Z>0</Z></Point>
					   <Point><X>4</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>4</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-3</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
			</Presentation>

				</Group>
				<Text>
					<Id>1700582459286</Id>
					<Name><![CDATA[text1]]></Name>
					<X>850</X><Y>390</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[F - get_normalized_min_max]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1699968747425</Id>
			<Name><![CDATA[motive]]></Name>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1699968747423</Id>
				<Name><![CDATA[1699968747423]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1700035200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1699968747421</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1699968747424</CurrentLevel>
			<ConnectionsId>1699968747420</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1699970097106</Id>
					<Name><![CDATA[type]]></Name>
					<X>30</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[mot_type]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699970114545</Id>
					<Name><![CDATA[name]]></Name>
					<X>30</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699970126775</Id>
					<Name><![CDATA[importance]]></Name>
					<X>30</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
			</Variables>
			<AgentLinks>
				<AgentLink>
					<Id>1699968747420</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1700146226752</Id>
					<Name><![CDATA[main]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[establishment_diner_model]]></PackageName>
						<ClassName><![CDATA[Main]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1699968747424</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1699968924616</Id>
			<Name><![CDATA[choice]]></Name>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<Import><![CDATA[import com.anylogic.executor.basic.sessions.Utilities;]]></Import>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1699968924614</Id>
				<Name><![CDATA[1699968924614]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1700035200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1699968924612</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1699968924615</CurrentLevel>
			<ConnectionsId>1699968924611</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1699969672029</Id>
					<Name><![CDATA[name]]></Name>
					<Description><![CDATA[if either 'choice A' or 'choice B']]></Description>
					<X>40</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1700149321690</Id>
					<Name><![CDATA[satisfactions]]></Name>
					<Description><![CDATA[It is a dictionary where the Key is the motive and the value is the motive's satisfaction]]></Description>
					<X>40</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[LinkedHashMap]]></CollectionClass>
						<ElementClass><![CDATA[String]]></ElementClass>
						<ValueElementClass><![CDATA[Double]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1699969930698</Id>
					<Name><![CDATA[calculate_total_satisfaction]]></Name>
					<X>50</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[motive_list]]></Name>
						<Type><![CDATA[List<motive>]]></Type>
					</Parameter>
					<Body><![CDATA[StatisticsDiscrete evaluation_list = new StatisticsDiscrete();
for(motive m: motive_list)
{
	/// not all motives apply to the specific choice
	/// so first check that the motive name is in the satisfactions
	if (this.satisfactions.containsKey(m.name))
	{
		double importance = m.importance;
		double satisfaction = this.satisfactions.get(m.name);
		evaluation_list.add(importance * satisfaction);
	}
}
double total_satisfaction = evaluation_list.mean();
return total_satisfaction;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double[]]]></ReturnType>
					<Id>1699969969257</Id>
					<Name><![CDATA[calculate_dissonance_strength]]></Name>
					<X>50</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[motive_list]]></Name>
						<Type><![CDATA[List<motive>]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[dissonance_tolerance]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[//get_evaluation_list
List<Double> evaluation_list = new ArrayList<Double>();
for(motive m: motive_list)
{
	double importance = m.importance;
	double satisfaction = this.satisfactions.get(m.name);
	evaluation_list.add(importance * satisfaction);
}
//traceln("Evaluation list: " + evaluation_list);
// get satisfying/dissatisfying from evaluation list
StatisticsDiscrete satisfying_list = new StatisticsDiscrete();
StatisticsDiscrete dissatisfying_list = new StatisticsDiscrete();
for(double i : evaluation_list) 
{ 
	if(i > 0) { satisfying_list.add(i);} 
	if(i < 0) { dissatisfying_list.add(i);}
}
//traceln("Satisfying list: " + satisfying_list + ", Dissatisfying list: " + dissatisfying_list);
double satisfying = Math.abs(satisfying_list.sum());
double dissatisfying = Math.abs(dissatisfying_list.sum());
//traceln("Sum satisfying: " + satisfying + ", Sum dissatisfying: " + dissatisfying);

/// calculate dissonance status : calculates the difference between positive and negative satisfactions
/// it normarlizes between 0 and 1: 0 not dissonant, 1 highly dissonant! 
double dissonant = min(satisfying,dissatisfying);
double consonant = max(satisfying,dissatisfying);
double dissonance_status = (2 * dissonant) / (dissonant + consonant);
//traceln("dissonant: " + dissonant + ", consonant: " + consonant + ", dissonance_status: " + dissonance_status);

/// calculate dissonance strength 
/// if dissonance tolerance is larger than dissonance status, dissonance strength is 0 (no dissonance strength)
/// if dissonance status is larger than dissonance tolerance, dissonance strength is positive with max of 1 
double dissonance_strength = (dissonance_status - dissonance_tolerance) / (1 - dissonance_tolerance);
if (dissonance_strength < 0) { dissonance_strength = 0; }

// get result
double[] result = {dissonance_strength,dissonance_status};
return result;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[Map<String,Double>]]></ReturnType>
					<Id>1700566513686</Id>
					<Name><![CDATA[get_evaluation_dict_social]]></Name>
					<X>50</X><Y>130</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[motives_list]]></Name>
						<Type><![CDATA[List<motive>]]></Type>
					</Parameter>
					<Body><![CDATA[Map<String, Double> evaluation_dict = new HashMap<>();
for(motive m: motives_list)
{
	if(m.type == social)
	{
		double satisfaction = this.satisfactions.get(m.name);
		double evaluation = m.importance * satisfaction;
		evaluation_dict.put(m.name,evaluation);
	}
}
return evaluation_dict;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[Map<String,Double>]]></ReturnType>
					<Id>1700566844484</Id>
					<Name><![CDATA[get_evaluation_dict_non_social]]></Name>
					<X>50</X><Y>150</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[motives_list]]></Name>
						<Type><![CDATA[List<motive>]]></Type>
					</Parameter>
					<Body><![CDATA[Map<String, Double> evaluation_dict = new HashMap<>();
for(motive m: motives_list)
{
	if(m.type != social)
	{
		double satisfaction = this.satisfactions.get(m.name);
		double evaluation = m.importance * satisfaction;
		evaluation_dict.put(m.name,evaluation);
	}
}
return evaluation_dict;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1700577960224</Id>
					<Name><![CDATA[update_choice_satisfaction]]></Name>
					<Description><![CDATA[Updates satisfaction of non-social motives based on the sum of  humat satisfaction * (1- alter pesuasion) and the satisfaction of alter * persuasion of alter ]]></Description>
					<X>50</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[humat]]></Name>
						<Type><![CDATA[Person]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[alter]]></Name>
						<Type><![CDATA[alter]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[index]]></Name>
						<Type><![CDATA[int]]></Type>
					</Parameter>
					<Body><![CDATA[// when humats are persuaded by other humats in their social networks, they change their satisfactions of needs for
// CAs to the extent that the alter is persuasive (status * similar of needs importances for the CA)
/*/ reports a new value of needs satisfaction for a persuaded HUMAT
for (motive m: humat.Motives)
{
	if (m.type != social)
	{
		double persuasion = alter.persuasion.get("receiving").get(this.name).get(m.name);
        double alter_satisfaction = alter.choice_list.get(index).alter_choice.satisfactions.get(m.name);
        double humat_satisfaction = humat.Choices.get(index).satisfactions.get(m.name);
        double result = ((1 - persuasion) * humat_satisfaction) + (persuasion * alter_satisfaction);
        result = Math.round(result * Math.pow(10, 16)) / Math.pow(10, 16);
        this.satisfactions.put(m.name,result);
    }
}
*/]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1699968924611</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1700149640655</Id>
					<Name><![CDATA[main]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[establishment_diner_model]]></PackageName>
						<ClassName><![CDATA[Main]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1699968924615</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1699969286787</Id>
			<Name><![CDATA[alter]]></Name>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1699969286785</Id>
				<Name><![CDATA[1699969286785]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1700035200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1699969286783</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1699969286786</CurrentLevel>
			<ConnectionsId>1699969286782</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1699969315864</Id>
					<Name><![CDATA[Id]]></Name>
					<X>30</X><Y>30</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699970221434</Id>
					<Name><![CDATA[inquired]]></Name>
					<X>30</X><Y>170</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699970234618</Id>
					<Name><![CDATA[signaled]]></Name>
					<X>30</X><Y>190</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[boolean]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699970258361</Id>
					<Name><![CDATA[relative_aspiration_inquire_receiver]]></Name>
					<X>30</X><Y>210</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699970286967</Id>
					<Name><![CDATA[relative_aspiration_signal_sender]]></Name>
					<X>30</X><Y>230</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699970404970</Id>
					<Name><![CDATA[ChosenOfAlter]]></Name>
					<X>30</X><Y>360</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[choiceRepresentation]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700232117978</Id>
					<Name><![CDATA[Alter_agent]]></Name>
					<X>30</X><Y>10</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Person]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700232508398</Id>
					<Name><![CDATA[chosen_ps]]></Name>
					<X>30</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[choice]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700562732336</Id>
					<Name><![CDATA[persuasion]]></Name>
					<Description><![CDATA[Dictionary with values: <String {"sending","receiving"}, String{"choice A", "choice B"}, String {"Motive Name"}, Double {Persuation value}> ]]></Description>
					<X>30</X><Y>250</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[Map<String, Map<String, Map<String, Double>>>]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708084816720</Id>
					<Name><![CDATA[chosen_lf]]></Name>
					<X>30</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[choice]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1708088742673</Id>
					<Name><![CDATA[Identity_weight]]></Name>
					<X>30</X><Y>110</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1699970368483</Id>
					<Name><![CDATA[choice_list_ps]]></Name>
					<X>280</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[choiceRepresentation]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1700232703414</Id>
					<Name><![CDATA[motive_list]]></Name>
					<X>280</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[motive]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1708085359268</Id>
					<Name><![CDATA[choice_list_fl]]></Name>
					<X>280</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[choiceRepresentation]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1699970451532</Id>
					<Name><![CDATA[update_choice_representation]]></Name>
					<X>280</X><Y>120</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[alter_choice_list]]></Name>
						<Type><![CDATA[List<choice>]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[choice_type]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[/*/update choice representation of alter representation
this.choice_list.clear();
// get choice (A or B) total satisfaction, it uses old satisfactions of alter
for (choice c: alter_choice_list)
{
    choiceRepresentation cr = get_Main().add_choiceRepresentations(); 
    cr.alter_choice = c;
    cr.name = c.name;
    cr.motive_list = this.motive_list;
    cr.total_satisfaction = c.calculate_total_satisfaction(this.motive_list);
    this.choice_list.add(cr);
}*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1699970502757</Id>
					<Name><![CDATA[update_persuasion]]></Name>
					<X>280</X><Y>180</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[Ego]]></Name>
						<Type><![CDATA[Person]]></Type>
					</Parameter>
					<Body><![CDATA[/*/find the indices and the names of non-social motives
// (only values and experiences are of interest)
int index1 = 0;
List<String> motives_names = new ArrayList();
List<Integer> motives_indices = new ArrayList();
for(motive m: this.motive_list)
{
	if(m.type != social)
	{
		motives_names.add(m.name);
		motives_indices.add(index1);
	}
	index1 ++;
}
// Initialize the persuasions dictionary
// Dictionaries are nested and containg the follwing data
// { "sending": { "choiceA": {}, "choiceB": {} },
//   "receiving": { "choiceA": {}, "choiceB": {} } }
Map<String, Map<String, Map<String, Double>>> persuasionsDict = new HashMap<>();
persuasionsDict.put("sending", new HashMap<>());
persuasionsDict.put("receiving", new HashMap<>());

// Loop through each choice in the choiceList
int index2 = 0;
for (choiceRepresentation c: this.choice_list) {
    
    // Initialize dictionaries for the current choice under "sending" and "receiving"
    persuasionsDict.get("sending").put(c.name, new HashMap<>());
    persuasionsDict.get("receiving").put(c.name, new HashMap<>());
    
    // Loop through each NON-SOCIAL motive in the list of motives.names
    for (int n = 0; n < motives_names.size(); n++) {
        String m_name = motives_names.get(n);
        int m_index = motives_indices.get(n);

        // Compute values related to similarity, importance, and satisfaction
        double importanceAlter = this.motive_list.get(m_index).importance;
        double satisfactionAlter = c.alter_choice.satisfactions.get(m_name);
        double evaluationAlter = importanceAlter * satisfactionAlter;

        double importanceEgo = Ego.Motives.get(m_index).importance;
        double satisfactionEgo = Ego.Choices.get(index2).satisfactions.get(m_name);
        double evaluationEgo = importanceEgo * satisfactionEgo;

        // Compute importance similarity using a utility function
        double importanceSimilarity = compute_importance_similarity(
            evaluationEgo, evaluationAlter, importanceEgo, importanceAlter);

        // Compute persuasion as the multiplication of importance-similarity and relative-aspiration
        persuasionsDict.get("sending").get(c.name).put(m_name,(importanceSimilarity * this.relative_aspiration_signal_sender));
        persuasionsDict.get("receiving").get(c.name).put(m_name,(importanceSimilarity * this.relative_aspiration_inquire_receiver));
    }
    index2 ++;
}
// inquiring persuasion = sum of all (non-social) persuasions
this.persuasion = persuasionsDict;
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1700234517452</Id>
					<Name><![CDATA[update_alter_representation]]></Name>
					<X>280</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[Ego]]></Name>
						<Type><![CDATA[Person]]></Type>
					</Parameter>
					<Body><![CDATA[/*/ UPDATE ALTER REPRESENTATION
//Update the representation of chose to what the latest choice of the alter
//traceln();
//traceln("Alter ID: " + this.Alter_agent.Id);
//traceln("Old alter choice = " + this.chosen.name + ", New alter choice: " + this.Alter_agent.chosen.name);
this.chosen = this.Alter_agent.chosen;
//traceln("New alter choice = " + this.chosen.name);
//For each choice, update the total satisfaction
//traceln("Old Choice A sat= " + this.Alter_agent.Choices.get(0).satisfactions + ", Old Choice B sat= " + this.Alter_agent.Choices.get(1).satisfactions);
//traceln("Old Choice A tot sat= " + this.choice_list.get(0).total_satisfaction + ", Old Choice B tot sat= " + this.choice_list.get(1).total_satisfaction);
this.update_choice_representation(this.Alter_agent.Choices);
//traceln("New alter choice A sat= " + this.Alter_agent.Choices.get(0).satisfactions + ", New alter choice B sat= " + this.Alter_agent.Choices.get(1).satisfactions);
//traceln("New Choice A tot sat= " + this.choice_list.get(0).total_satisfaction + ", New Choice B tot sat= " + this.choice_list.get(1).total_satisfaction);
// update persuasion of alter (for sending and receiving; for each choice A and B; for each NON-SOCIAL motive)
//traceln("Old persuasions sending Choice A= " + this.persuasion.get("sending").get("Choice A"));
//traceln("Old persuasions receiving Choice b= " + this.persuasion.get("receiving").get("Choice B"));
this.update_persuasion(Ego);
//traceln("New persuasions sending Choice A= " + this.persuasion.get("sending").get("Choice A"));
//traceln("New persuasions receiving Choice b= " + this.persuasion.get("receiving").get("Choice B"));
*/]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>VOID</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1700234544035</Id>
					<Name><![CDATA[update_chosen]]></Name>
					<X>280</X><Y>160</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[chosen]]></Name>
						<Type><![CDATA[choice]]></Type>
					</Parameter>
					<Body><![CDATA[// update the .chosen
//this.chosen = chosen;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1700234564304</Id>
					<Name><![CDATA[get_sum_persuasion]]></Name>
					<Description><![CDATA[ # for sorting for signaling and inquiring, returns a sum of all values of "sending" or "receiving" in persuation
 # action takes either sending or receiving]]></Description>
					<X>280</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[action]]></Name>
						<Type><![CDATA[String]]></Type>
					</Parameter>
					<Body><![CDATA[if (!this.persuasion.containsKey(action))
{
	return 0.0;
}

Map< String, Map<String, Double> > category_data = this.persuasion.get(action);
double total = 0.0;
for (Map<String,Double> inner_dict: category_data.values())
{
	for (double value: inner_dict.values())
	{
		total += value;
	}
}
return total;]]></Body>
				</Function>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1700561425096</Id>
					<Name><![CDATA[compute_importance_similarity]]></Name>
					<X>300</X><Y>200</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Parameter>
						<Name><![CDATA[evaluation_ego]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[evaluation_alter]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[importance_ego]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Parameter>
						<Name><![CDATA[importance_alter]]></Name>
						<Type><![CDATA[double]]></Type>
					</Parameter>
					<Body><![CDATA[double result;

if ((evaluation_ego > 0 && evaluation_alter > 0) || (evaluation_ego < 0 && evaluation_alter < 0)) 
{
	result = 0.4 * (1 - Math.abs(importance_ego - importance_alter));
} else { result = 0; }
return result;]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1699969286782</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1700231453190</Id>
					<Name><![CDATA[main]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[establishment_diner_model]]></PackageName>
						<ClassName><![CDATA[Main]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1699969286786</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>

			<Presentation>
				<Group>
					<Id>1699969286789</Id>
					<Name><![CDATA[patient]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>-19</X><Y>20</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>

			<Presentation>
				<Curve ControlPoints="true">
					<Id>1699969286791</Id>
					<Name><![CDATA[_ps25]]></Name>
					<X>-2</X><Y>9</Y>
					<Label><X>-20</X><Y>40</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-9404272</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>4</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>4</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>4</X><Y>-1</Y><Z>0</Z></Point>
					   <Point><X>4</X><Y>-1</Y><Z>0</Z></Point>
					   <Point><X>2</X><Y>-1</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-1</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-1</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
				<Curve ControlPoints="true">
					<Id>1699969286793</Id>
					<Name><![CDATA[_ps26]]></Name>
					<X>1</X><Y>8</Y>
					<Label><X>-20</X><Y>40</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-9404272</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-2</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-2</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-2</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-3</X><Y>-8</Y><Z>0</Z></Point>
					   <Point><X>-3</X><Y>-8</Y><Z>0</Z></Point>
					   <Point><X>-3</X><Y>-8</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>-8</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>-8</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>-8</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
				<Curve ControlPoints="true">
					<Id>1699969286795</Id>
					<Name><![CDATA[_ps27]]></Name>
					<X>0</X><Y>-4</Y>
					<Label><X>-20</X><Y>40</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-1722998</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>2</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>3</X><Y>-4</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-4</Y><Z>0</Z></Point>
					   <Point><X>-3</X><Y>-4</Y><Z>0</Z></Point>
					   <Point><X>-2</X><Y>0</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
				<Curve ControlPoints="true">
					<Id>1699969286797</Id>
					<Name><![CDATA[_ps28]]></Name>
					<X>-1</X><Y>-4</Y>
					<Label><X>-20</X><Y>40</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-9404272</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-1</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-2</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-2</X><Y>4</Y><Z>0</Z></Point>
					   <Point><X>-2</X><Y>4</Y><Z>0</Z></Point>
					   <Point><X>-2</X><Y>4</Y><Z>0</Z></Point>
					   <Point><X>-1</X><Y>5</Y><Z>0</Z></Point>
					   <Point><X>-1</X><Y>5</Y><Z>0</Z></Point>
					   <Point><X>-1</X><Y>5</Y><Z>0</Z></Point>
					   <Point><X>-1</X><Y>7</Y><Z>0</Z></Point>
					   <Point><X>-1</X><Y>7</Y><Z>0</Z></Point>
					   <Point><X>-1</X><Y>7</Y><Z>0</Z></Point>
					   <Point><X>3</X><Y>7</Y><Z>0</Z></Point>
					   <Point><X>3</X><Y>7</Y><Z>0</Z></Point>
					   <Point><X>3</X><Y>7</Y><Z>0</Z></Point>
					   <Point><X>3</X><Y>5</Y><Z>0</Z></Point>
					   <Point><X>3</X><Y>5</Y><Z>0</Z></Point>
					   <Point><X>3</X><Y>5</Y><Z>0</Z></Point>
					   <Point><X>4</X><Y>4</Y><Z>0</Z></Point>
					   <Point><X>4</X><Y>4</Y><Z>0</Z></Point>
					   <Point><X>4</X><Y>4</Y><Z>0</Z></Point>
					   <Point><X>4</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>2</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>2</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>1</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>1</Y><Z>0</Z></Point>
					   <Point><X>1</X><Y>1</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
				<Line>
					<Id>1699969286799</Id>
					<Name><![CDATA[_ps29]]></Name>
					<X>2</X><Y>1</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-9404272</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>-2</Dx>
					<Dy>-1</Dy>
					<Dz>0</Dz>
				</Line>
				<Polyline>
					<Id>1699969286801</Id>
					<Name><![CDATA[_ps30]]></Name>
					<X>-2</X><Y>1</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-9404272</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor/>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>3</X><Y>-2</Y><Z>0</Z></Point>
					</Points>
					<Closed>false</Closed>
				</Polyline>
				<Curve ControlPoints="true">
					<Id>1699969286803</Id>
					<Name><![CDATA[_ps31]]></Name>
					<X>2</X><Y>-6</Y>
					<Label><X>-20</X><Y>40</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>10</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor/>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<FillColor>-10340825</FillColor>
					<FillMaterial>null</FillMaterial>
					<Points>
					   <Point><X>0</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>-4</X><Y>-3</Y><Z>0</Z></Point>
					   <Point><X>-4</X><Y>0</Y><Z>0</Z></Point>
					   <Point><X>-4</X><Y>1</Y><Z>0</Z></Point>
					   <Point><X>-3</X><Y>-1</Y><Z>0</Z></Point>
					   <Point><X>-3</X><Y>-1</Y><Z>0</Z></Point>
					   <Point><X>-2</X><Y>-1</Y><Z>0</Z></Point>
					   <Point><X>-2</X><Y>-1</Y><Z>0</Z></Point>
					   <Point><X>-1</X><Y>-1</Y><Z>0</Z></Point>
					   <Point><X>-1</X><Y>-1</Y><Z>0</Z></Point>
					   <Point><X>0</X><Y>1</Y><Z>0</Z></Point>
					</Points>
					<Closed>true</Closed>
				</Curve>
			</Presentation>

				</Group>
			</Presentation>

				</Level>
			</Presentation>

		</ActiveObjectClass>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1699970353598</Id>
			<Name><![CDATA[choiceRepresentation]]></Name>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1699970353596</Id>
				<Name><![CDATA[1699970353596]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
	 			<SpaceType>CONTINUOUS</SpaceType>			
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1700035200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[DAY]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1699970353594</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1699970353597</CurrentLevel>
			<ConnectionsId>1699970353593</ConnectionsId>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1699970544218</Id>
					<Name><![CDATA[alter_choice]]></Name>
					<X>30</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[choice]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699970565443</Id>
					<Name><![CDATA[total_satisfaction]]></Name>
					<X>30</X><Y>60</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699970577554</Id>
					<Name><![CDATA[persuation_inquiarying]]></Name>
					<X>30</X><Y>80</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1699970600645</Id>
					<Name><![CDATA[persuation_signaling]]></Name>
					<X>30</X><Y>100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700238006270</Id>
					<Name><![CDATA[name]]></Name>
					<X>30</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[String]]></Type>        
					</Properties>
				</Variable>
				<Variable Class="CollectionVariable">
					<Id>1700238344980</Id>
					<Name><![CDATA[motive_list]]></Name>
					<X>190</X><Y>20</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
						<CollectionClass><![CDATA[ArrayList]]></CollectionClass>
						<ElementClass><![CDATA[motive]]></ElementClass>
						<ValueElementClass><![CDATA[String]]></ValueElementClass>
					</Properties>

				</Variable>
			</Variables>
			<Functions>
				<Function AccessType="default" StaticFunction="false">
					<ReturnModificator>RETURNS_VALUE</ReturnModificator>
					<ReturnType><![CDATA[double]]></ReturnType>
					<Id>1699970635330</Id>
					<Name><![CDATA[calculate_importance_similarity]]></Name>
					<X>190</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Body><![CDATA[return 0;]]></Body>
				</Function>
			</Functions>
			<AgentLinks>
				<AgentLink>
					<Id>1699970353593</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>

			<ContainerLinks>
				<ContainerLink>
					<Id>1700237532794</Id>
					<Name><![CDATA[main]]></Name>
					<X>50</X><Y>-100</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<ActiveObjectClass>
						<PackageName><![CDATA[establishment_diner_model]]></PackageName>
						<ClassName><![CDATA[Main]]></ClassName>
					</ActiveObjectClass>
				</ContainerLink>
			</ContainerLinks>

			<Presentation>
				<Level>
					<Id>1699970353597</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
	</ActiveObjectClasses>	
	<DifferentialEquationsMethod>EULER</DifferentialEquationsMethod>
	<MixedEquationsMethod>RK45_NEWTON</MixedEquationsMethod>
	<AlgebraicEquationsMethod>MODIFIED_NEWTON</AlgebraicEquationsMethod>
	<AbsoluteAccuracy>1.0E-5</AbsoluteAccuracy>
	<FixedTimeStep>0.01</FixedTimeStep>
	<RelativeAccuracy>1.0E-5</RelativeAccuracy>
	<TimeAccuracy>1.0E-5</TimeAccuracy>
	<Frame>
		<Width>800</Width>
		<Height>600</Height>
	</Frame>
	<Database>
		<Logging>false</Logging>
		<AutoExport>false</AutoExport>
		<ShutdownCompact>false</ShutdownCompact>
		<ImportSettings>
		</ImportSettings>
		<ExportSettings>
		</ExportSettings>
	</Database>
	
	<RunConfiguration ActiveObjectClassId="1169204694667">
		<Id>1521538287980</Id>
		<Name><![CDATA[RunConfiguration]]></Name>
		<MaximumMemory>512</MaximumMemory>
		<ModelTimeProperties>
			<StopOption><![CDATA[Stop at specified time]]></StopOption>
			<InitialDate><![CDATA[1169204694000]]></InitialDate>	
			<InitialTime><![CDATA[0.0]]></InitialTime>	
			<FinalDate><![CDATA[1177844694000]]></FinalDate>	
			<FinalTime><![CDATA[100.0]]></FinalTime>	
		</ModelTimeProperties>
		<AnimationProperties>
			<StopNever>true</StopNever>
			<ExecutionMode>realTimeScaled</ExecutionMode>
			<RealTimeScale>1.0</RealTimeScale>
			<EnableZoomAndPanning>true</EnableZoomAndPanning>
			<EnableDeveloperPanel>false</EnableDeveloperPanel>
			<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
		</AnimationProperties>
		<Inputs>		
		</Inputs>
		<Outputs>
		</Outputs>
	</RunConfiguration>
	<Experiments>	
		<!--   =========   Simulation Experiment   ========  -->
		<SimulationExperiment ActiveObjectClassId="1169204694667">
			<Id>1169204694676</Id>
			<Name><![CDATA[Simulation]]></Name>
			<ClientAreaTopLeft><X>0</X><Y>0</Y></ClientAreaTopLeft>
			<CommandLineArguments><![CDATA[]]></CommandLineArguments>
			<MaximumMemory>4000</MaximumMemory>
			<RandomNumberGenerationType>fixedSeed</RandomNumberGenerationType>
			<CustomGeneratorCode>new Random()</CustomGeneratorCode>
			<SeedValue>1</SeedValue>
			<SelectionModeForSimultaneousEvents>LIFO</SelectionModeForSimultaneousEvents>
			<VmArgs><![CDATA[]]></VmArgs>
			<LoadRootFromSnapshot>false</LoadRootFromSnapshot>
			<Variables>
				<Variable Class="PlainVariable">
					<Id>1700126430363</Id>
					<Name><![CDATA[net_type]]></Name>
					<X>-210</X><Y>50</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[1]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700126544198</Id>
					<Name><![CDATA[lay_type]]></Name>
					<X>-210</X><Y>70</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[1]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700126577063</Id>
					<Name><![CDATA[conn_per_agent]]></Name>
					<X>-200</X><Y>240</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[2]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700126666738</Id>
					<Name><![CDATA[conn_in_range]]></Name>
					<X>-200</X><Y>260</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[50]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700126693628</Id>
					<Name><![CDATA[neigh_link_prob]]></Name>
					<X>-200</X><Y>280</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[double]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[0.95]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700126714150</Id>
					<Name><![CDATA[m_scale_free]]></Name>
					<X>-200</X><Y>300</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[10]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
				<Variable Class="PlainVariable">
					<Id>1700127002344</Id>
					<Name><![CDATA[number_agents]]></Name>
					<X>-210</X><Y>90</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<Properties SaveInSnapshot="true" Constant="false" AccessType="public" StaticVariable="false">
						<Type><![CDATA[int]]></Type>        
						<InitialValue Class="CodeValue">
							<Code><![CDATA[100]]></Code>
						</InitialValue>
					</Properties>
				</Variable>
			</Variables>

			<Presentation>
				<Control Type="RadioButtons">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1700126260003</Id>
					<Name><![CDATA[radioNetworkType]]></Name>
					<X>30</X><Y>50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="150" Height="140">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor>-16777216</TextColor>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[0]]></DefaultValueCode>
						<Orientation>VERTICAL</Orientation>
						<Button><![CDATA[None (user-defined)]]></Button>
						<Button><![CDATA[Random]]></Button>
						<Button><![CDATA[All in range]]></Button>
						<Button><![CDATA[Ring lattice]]></Button>
						<Button><![CDATA[Small world]]></Button>
						<Button><![CDATA[Scale free]]></Button>
						<LinkTo>true</LinkTo>
						<Link>net_type</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1700126297783</Id>
					<Name><![CDATA[text8]]></Name>
					<X>180</X><Y>370</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-12156236</Color>
					<Text><![CDATA[123]]></Text>
					<TextCode><![CDATA[format( m_scale_free )]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1700126297798</Id>
					<Name><![CDATA[text6]]></Name>
					<X>180</X><Y>220</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-12156236</Color>
					<Text><![CDATA[123]]></Text>
					<TextCode><![CDATA[format( conn_per_agent )]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1700126297804</Id>
					<Name><![CDATA[sliderRange]]></Name>
					<X>20</X><Y>280</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="170" Height="40">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[connectionRange]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[500]]></MaxValue>
						<Step><![CDATA[25]]></Step>
						<LinkTo>true</LinkTo>
						<Link>conn_in_range</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1700126297814</Id>
					<Name><![CDATA[text7]]></Name>
					<X>180</X><Y>270</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-12156236</Color>
					<Text><![CDATA[123]]></Text>
					<TextCode><![CDATA[format( conn_in_range )]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1700126297818</Id>
					<Name><![CDATA[text1]]></Name>
					<X>30</X><Y>270</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Connection range:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1700126297821</Id>
					<Name><![CDATA[text2]]></Name>
					<X>30</X><Y>320</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Neighbor link probability]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1700126297824</Id>
					<Name><![CDATA[text]]></Name>
					<X>30</X><Y>220</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Connections per agent:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1700126297826</Id>
					<Name><![CDATA[sliderConnectionsPerAgent]]></Name>
					<X>20</X><Y>230</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="170" Height="40">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[connectionsPerAgent ]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[10]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>true</LinkTo>
						<Link>conn_per_agent</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1700126297830</Id>
					<Name><![CDATA[text3]]></Name>
					<X>30</X><Y>370</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[M (Scale Free parameter)]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1700126297832</Id>
					<Name><![CDATA[sliderScaleFreeM]]></Name>
					<X>20</X><Y>380</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="170" Height="40">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[scaleFreeM]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[50]]></MaxValue>
						<Step><![CDATA[1]]></Step>
						<LinkTo>true</LinkTo>
						<Link>m_scale_free</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1700126297835</Id>
					<Name><![CDATA[text9]]></Name>
					<X>180</X><Y>320</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-12156236</Color>
					<Text><![CDATA[123]]></Text>
					<TextCode><![CDATA[format( neigh_link_prob )]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1700126297837</Id>
					<Name><![CDATA[sliderNeighborLinkProb]]></Name>
					<X>20</X><Y>330</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="170" Height="40">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[neighborLinkProbability]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[0]]></MinValue>
						<MaxValue><![CDATA[1]]></MaxValue>
						<Step><![CDATA[0.05]]></Step>
						<LinkTo>true</LinkTo>
						<Link>neigh_link_prob</Link>
					</ExtendedProperties>
				</Control>
				<Control Type="RadioButtons">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1700126335606</Id>
					<Name><![CDATA[radioLayoutType]]></Name>
					<X>210</X><Y>50</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="160" Height="120">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<TextColor>-16777216</TextColor>
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<Font Name="Dialog" Size="11" Style="0"/>
						<DefaultValueCode><![CDATA[1]]></DefaultValueCode>
						<Orientation>VERTICAL</Orientation>
						<Button><![CDATA[User Defined]]></Button>
						<Button><![CDATA[Random]]></Button>
						<Button><![CDATA[Arranged]]></Button>
						<Button><![CDATA[Ring]]></Button>
						<Button><![CDATA[Spring Mass]]></Button>
						<LinkTo>true</LinkTo>
						<Link>lay_type</Link>
					</ExtendedProperties>
				</Control>
				<Line>
					<Id>1700126335624</Id>
					<Name><![CDATA[line]]></Name>
					<X>200</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>0</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-12156236</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>180</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1700126335626</Id>
					<Name><![CDATA[text4]]></Name>
					<X>200</X><Y>25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777088</Color>
					<Text><![CDATA[Layout type]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Line>
					<Id>1700126390837</Id>
					<Name><![CDATA[line1]]></Name>
					<X>30</X><Y>40</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<ZHeight>0</ZHeight>
					<LineWidth>1</LineWidth>
					<LineColor>-12156236</LineColor>
					<LineMaterial>null</LineMaterial>
					<LineStyle>SOLID</LineStyle>
					<BeginArrowSize>1</BeginArrowSize>
					<BeginArrowStyle>0</BeginArrowStyle>
					<EndArrowSize>1</EndArrowSize>
					<EndArrowStyle>0</EndArrowStyle>
					<Dx>180</Dx>
					<Dy>0</Dy>
					<Dz>0</Dz>
				</Line>
				<Text>
					<Id>1700126390842</Id>
					<Name><![CDATA[text5]]></Name>
					<X>30</X><Y>25</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777088</Color>
					<Text><![CDATA[Network type]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>12</Size>
						<Style>1</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1700126954837</Id>
					<Name><![CDATA[text12]]></Name>
					<X>300</X><Y>220</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[Number of Agents:]]></Text>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Text>
					<Id>1700126954842</Id>
					<Name><![CDATA[text35]]></Name>
					<X>250</X><Y>270</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[min]]></Text>
					<TextCode><![CDATA[slider4.getMin()]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>LEFT</Alignment>
				</Text>
				<Text>
					<Id>1700126954845</Id>
					<Name><![CDATA[text36]]></Name>
					<X>400</X><Y>270</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[max]]></Text>
					<TextCode><![CDATA[slider4.getMax()]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
				<Text>
					<Id>1700126954848</Id>
					<Name><![CDATA[text37]]></Name>
					<X>325</X><Y>270</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-16777216</Color>
					<Text><![CDATA[value]]></Text>
					<TextCode><![CDATA[slider4.getValue()]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>10</Size>
						<Style>0</Style>
					</Font>
					<Alignment>CENTER</Alignment>
				</Text>
				<Control Type="Slider">
				 	<EmbeddedIcon>false</EmbeddedIcon>				
					<Id>1700126954850</Id>
					<Name><![CDATA[slider4]]></Name>
					<X>250</X><Y>240</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<BasicProperties Width="150" Height="30">
                        <EmbeddedIcon>false</EmbeddedIcon>	
						<Enabled>true</Enabled>
					</BasicProperties>
					<ExtendedProperties>
						<DefaultValueCode><![CDATA[50]]></DefaultValueCode>
						<Orientation>HORIZONTAL</Orientation>
						<MinValue><![CDATA[5]]></MinValue>
						<MaxValue><![CDATA[300]]></MaxValue>
						<Step><![CDATA[5]]></Step>
						<LinkTo>true</LinkTo>
						<Link>number_agents</Link>
					</ExtendedProperties>
				</Control>
				<Text>
					<Id>1700127323099</Id>
					<Name><![CDATA[text10]]></Name>
					<X>400</X><Y>220</Y>
					<Label><X>0</X><Y>-10</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D</DrawMode>
					<EmbeddedIcon>false</EmbeddedIcon>
					<Z>0</Z>
					<Rotation>0.0</Rotation>
					<Color>-12156236</Color>
					<Text><![CDATA[123]]></Text>
					<TextCode><![CDATA[format( number_agents )]]></TextCode>
					<Font>
						<Name>SansSerif</Name>
						<Size>11</Size>
						<Style>0</Style>
					</Font>
					<Alignment>RIGHT</Alignment>
				</Text>
			</Presentation>

			<Parameters>			
				<Parameter>
					<ParameterName><![CDATA[param]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[range]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[n_Agents]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[number_agents]]></Code>
					</ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[layout_type]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[lay_type]]></Code>
					</ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[network_type]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[net_type]]></Code>
					</ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[connections_PerAgent]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[conn_per_agent]]></Code>
					</ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[connection_Range]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[conn_in_range]]></Code>
					</ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[neighbor_LinkProbability]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[neigh_link_prob]]></Code>
					</ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[scaleFree_M]]></ParameterName>
					<ParameterValue Class="CodeValue">
						<Code><![CDATA[m_scale_free]]></Code>
					</ParameterValue>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[Business_proportion]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[Female_proportion]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[Small_plate]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[Food_Diversity]]></ParameterName>
				</Parameter>
				<Parameter>
					<ParameterName><![CDATA[left_food_percentage]]></ParameterName>
				</Parameter>
			</Parameters>			
			<PresentationProperties>
				<EnableZoomAndPanning>true</EnableZoomAndPanning>
				<ExecutionMode><![CDATA[realTimeScaled]]></ExecutionMode>
				<Title><![CDATA[Agent Network and Layout Demo]]></Title>	
				<EnableDeveloperPanel>true</EnableDeveloperPanel>
				<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
				<RealTimeScale>1.0</RealTimeScale>
			</PresentationProperties>
			<ModelTimeProperties>
				<StopOption><![CDATA[Stop at specified date]]></StopOption>
				<InitialDate><![CDATA[1704092400000]]></InitialDate>	
				<InitialTime><![CDATA[0.0]]></InitialTime>	
				<FinalDate><![CDATA[1704171600000]]></FinalDate>	
				<FinalTime><![CDATA[0.9166666666666666]]></FinalTime>	
			</ModelTimeProperties>
			<BypassInitialScreen>false</BypassInitialScreen>
		</SimulationExperiment>	
	</Experiments>
    <RequiredLibraryReference>
		<LibraryName><![CDATA[com.anylogic.libraries.modules.markup_descriptors]]></LibraryName>
		<VersionMajor>1</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionBuild>0</VersionBuild>
    </RequiredLibraryReference>
</Model>
</AnyLogicWorkspace>